

Microchip Technology PIC LITE Macro Assembler V1.42 build -159332390 
                                                                                               Fri Jun 09 23:11:59 2017

Microchip Technology Omniscient Code Generator v1.42 (Free mode) build 201704130522
     1                           	processor	16F628A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	maintext,global,class=CODE,split=1,delta=2
     7                           	psect	text1,local,class=CODE,merge=1,delta=2
     8                           	dabs	1,0x7E,2
     9  0000                     
    10                           ; Version 1.42
    11                           ; Generated 13/04/2017 GMT
    12                           ; 
    13                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    14                           ; All rights reserved.
    15                           ; 
    16                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    17                           ; 
    18                           ; Redistribution and use in source and binary forms, with or without modification, are
    19                           ; permitted provided that the following conditions are met:
    20                           ; 
    21                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    22                           ;        conditions and the following disclaimer.
    23                           ; 
    24                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    25                           ;        of conditions and the following disclaimer in the documentation and/or other
    26                           ;        materials provided with the distribution.
    27                           ; 
    28                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    29                           ;        software without specific prior written permission.
    30                           ; 
    31                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    32                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    33                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    34                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    35                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    36                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    37                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    38                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    39                           ; 
    40                           ; 
    41                           ; Code-generator required, PIC16F628A Definitions
    42                           ; 
    43                           ; SFR Addresses
    44  0000                     	;# 
    45  0001                     	;# 
    46  0002                     	;# 
    47  0003                     	;# 
    48  0004                     	;# 
    49  0005                     	;# 
    50  0006                     	;# 
    51  000A                     	;# 
    52  000B                     	;# 
    53  000C                     	;# 
    54  000E                     	;# 
    55  000E                     	;# 
    56  000F                     	;# 
    57  0010                     	;# 
    58  0011                     	;# 
    59  0012                     	;# 
    60  0015                     	;# 
    61  0015                     	;# 
    62  0016                     	;# 
    63  0017                     	;# 
    64  0018                     	;# 
    65  0019                     	;# 
    66  001A                     	;# 
    67  001F                     	;# 
    68  0081                     	;# 
    69  0085                     	;# 
    70  0086                     	;# 
    71  008C                     	;# 
    72  008E                     	;# 
    73  0092                     	;# 
    74  0098                     	;# 
    75  0099                     	;# 
    76  009A                     	;# 
    77  009B                     	;# 
    78  009C                     	;# 
    79  009D                     	;# 
    80  009F                     	;# 
    81  0017                     _CCP1CONbits	set	23
    82  0012                     _T2CONbits	set	18
    83  0015                     _CCPR1L	set	21
    84  00BC                     _CCP1Y	set	188
    85  00BD                     _CCP1X	set	189
    86  0086                     _TRISBbits	set	134
    87  0092                     _PR2	set	146
    88                           
    89                           ; #config settings
    90  0000                     
    91                           	psect	cinit
    92  07FE                     start_initialization:	
    93  07FE                     __initialization:	
    94  07FE                     end_of_initialization:	
    95                           ;End of C runtime variable initialization code
    96                           
    97  07FE                     __end_of__initialization:	
    98  07FE  0183               	clrf	3
    99  07FF  2FD0               	ljmp	_main	;jump to C main() function
   100                           
   101                           	psect	cstackCOMMON
   102  0070                     __pcstackCOMMON:	
   103  0070                     ?_configPWM:	
   104  0070                     ??_configPWM:	
   105                           ; 1 bytes @ 0x0
   106                           
   107  0070                     ?_main:	
   108                           ; 1 bytes @ 0x0
   109                           
   110  0070                     ??_main:	
   111                           ; 1 bytes @ 0x0
   112                           
   113                           
   114                           ; 1 bytes @ 0x0
   115  0070                     	ds	3
   116                           
   117                           	psect	maintext
   118  07D0                     __pmaintext:	
   119 ;;
   120 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   121 ;;
   122 ;; *************** function _main *****************
   123 ;; Defined at:
   124 ;;		line 14 in file "PWM.c"
   125 ;; Parameters:    Size  Location     Type
   126 ;;		None
   127 ;; Auto vars:     Size  Location     Type
   128 ;;		None
   129 ;; Return value:  Size  Location     Type
   130 ;;                  1    wreg      void 
   131 ;; Registers used:
   132 ;;		wreg, status,2, status,0, pclath, cstack
   133 ;; Tracked objects:
   134 ;;		On entry : B00/0
   135 ;;		On exit  : 0/0
   136 ;;		Unchanged: 0/0
   137 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   138 ;;      Params:         0       0       0       0
   139 ;;      Locals:         0       0       0       0
   140 ;;      Temps:          3       0       0       0
   141 ;;      Totals:         3       0       0       0
   142 ;;Total ram usage:        3 bytes
   143 ;; Hardware stack levels required when called:    1
   144 ;; This function calls:
   145 ;;		_configPWM
   146 ;; This function is called by:
   147 ;;		Startup code after reset
   148 ;; This function uses a non-reentrant model
   149 ;;
   150                           
   151                           
   152                           ;psect for function _main
   153  07D0                     _main:	
   154                           
   155                           ;PWM.c: 17: configPWM();
   156                           
   157                           ;incstack = 0
   158                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   159  07D0  27E5               	fcall	_configPWM
   160  07D1                     l501:	
   161                           ;PWM.c: 19: while(1){
   162                           
   163                           
   164                           ;PWM.c: 20: _delay((unsigned long)((100)*(24000000/4000.0)));
   165  07D1  3004               	movlw	4
   166  07D2  00F2               	movwf	??_main+2
   167  07D3  300C               	movlw	12
   168  07D4  00F1               	movwf	??_main+1
   169  07D5  3033               	movlw	51
   170  07D6  00F0               	movwf	??_main
   171  07D7                     u17:	
   172  07D7  0BF0               	decfsz	??_main,f
   173  07D8  2FD7               	goto	u17
   174  07D9  0BF1               	decfsz	??_main+1,f
   175  07DA  2FD7               	goto	u17
   176  07DB  0BF2               	decfsz	??_main+2,f
   177  07DC  2FD7               	goto	u17
   178  07DD  2FDE               	nop2
   179                           
   180                           ;PWM.c: 21: CCPR1L++;
   181  07DE  3001               	movlw	1
   182  07DF  00F0               	movwf	??_main
   183  07E0  0870               	movf	??_main,w
   184  07E1  1283               	bcf	3,5	;RP0=0, select bank0
   185  07E2  1303               	bcf	3,6	;RP1=0, select bank0
   186  07E3  0795               	addwf	21,f	;volatile
   187  07E4  2FD1               	goto	l501
   188  07E5                     __end_of_main:	
   189                           ;PWM.c: 22: }
   190                           ;PWM.c: 24: return;
   191                           
   192                           
   193                           	psect	text1
   194  07E5                     __ptext1:	
   195 ;; *************** function _configPWM *****************
   196 ;; Defined at:
   197 ;;		line 13 in file "PWM.h"
   198 ;; Parameters:    Size  Location     Type
   199 ;;		None
   200 ;; Auto vars:     Size  Location     Type
   201 ;;		None
   202 ;; Return value:  Size  Location     Type
   203 ;;                  1    wreg      void 
   204 ;; Registers used:
   205 ;;		wreg, status,2, status,0
   206 ;; Tracked objects:
   207 ;;		On entry : 0/0
   208 ;;		On exit  : 0/0
   209 ;;		Unchanged: 0/0
   210 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   211 ;;      Params:         0       0       0       0
   212 ;;      Locals:         0       0       0       0
   213 ;;      Temps:          0       0       0       0
   214 ;;      Totals:         0       0       0       0
   215 ;;Total ram usage:        0 bytes
   216 ;; Hardware stack levels used:    1
   217 ;; This function calls:
   218 ;;		Nothing
   219 ;; This function is called by:
   220 ;;		_main
   221 ;; This function uses a non-reentrant model
   222 ;;
   223                           
   224                           
   225                           ;psect for function _configPWM
   226  07E5                     _configPWM:	
   227                           
   228                           ;PWM.h: 14: PR2 = 255;
   229                           
   230                           ;incstack = 0
   231                           ; Regs used in _configPWM: [wreg+status,2+status,0]
   232  07E5  30FF               	movlw	255
   233  07E6  1683               	bsf	3,5	;RP0=1, select bank1
   234  07E7  1303               	bcf	3,6	;RP1=0, select bank1
   235  07E8  0092               	movwf	18	;volatile
   236                           
   237                           ;PWM.h: 15: CCPR1L = CCP1X = CCP1Y = 0;
   238  07E9  1283               	bcf	3,5	;RP0=0, select bank0
   239  07EA  1303               	bcf	3,6	;RP1=0, select bank0
   240  07EB  1217               	bcf	23,4	;volatile
   241  07EC  1297               	bcf	23,5	;volatile
   242  07ED  3000               	movlw	0
   243  07EE  1A97               	btfsc	23,5	;volatile
   244  07EF  3001               	movlw	1
   245  07F0  0095               	movwf	21	;volatile
   246                           
   247                           ;PWM.h: 16: TRISBbits.TRISB3 = 0;
   248  07F1  1683               	bsf	3,5	;RP0=1, select bank1
   249  07F2  1303               	bcf	3,6	;RP1=0, select bank1
   250  07F3  1186               	bcf	6,3	;volatile
   251                           
   252                           ;PWM.h: 17: T2CONbits.T2CKPS = 0;
   253  07F4  30FC               	movlw	-4
   254  07F5  1283               	bcf	3,5	;RP0=0, select bank0
   255  07F6  1303               	bcf	3,6	;RP1=0, select bank0
   256  07F7  0592               	andwf	18,f	;volatile
   257                           
   258                           ;PWM.h: 18: T2CONbits.TMR2ON = 1;
   259  07F8  1512               	bsf	18,2	;volatile
   260                           
   261                           ;PWM.h: 19: CCP1CONbits.CCP1M = 12;
   262  07F9  0817               	movf	23,w	;volatile
   263  07FA  39F0               	andlw	-16
   264  07FB  380C               	iorlw	12
   265  07FC  0097               	movwf	23	;volatile
   266  07FD  0008               	return
   267  07FE                     __end_of_configPWM:	
   268  007E                     btemp	set	126	;btemp
   269  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      3       3
    BANK0            80      0       0
    BANK1            80      0       0
    BANK2            48      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0       0
                                              0 COMMON     3     3      0
                          _configPWM
 ---------------------------------------------------------------------------------
 (1) _configPWM                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _configPWM

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA              80      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      3       3       1       21.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
BANK0               50      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0       0       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK2            30      0       0       8        0.0%
BANK2               30      0       0       9        0.0%
DATA                 0      0       0      10        0.0%


Microchip Technology PIC Macro Assembler V1.42 build -159332390 
Symbol Table                                                                                   Fri Jun 09 23:11:59 2017

            __CFG_CP$OFF 0000                       u17 07D7                      l501 07D1  
                    _PR2 0092             __CFG_CPD$OFF 0000             __CFG_FOSC$HS 0000  
           __CFG_LVP$OFF 0000                     _main 07D0                     btemp 007E  
          __CFG_BOREN$ON 0000                     start 0000            __CFG_MCLRE$ON 0000  
                  ?_main 0070                    _CCP1X 00BD                    _CCP1Y 00BC  
          __CFG_WDTE$OFF 0000            __CFG_PWRTE$ON 0000                    status 0003  
                  wtemp0 007E          __initialization 07FE             __end_of_main 07E5  
                 ??_main 0070                   _CCPR1L 0015  __end_of__initialization 07FE  
         __pcstackCOMMON 0070       __size_of_configPWM 0019               __pmaintext 07D0  
      __end_of_configPWM 07FE                  __ptext1 07E5                _T2CONbits 0012  
   end_of_initialization 07FE                _TRISBbits 0086              _CCP1CONbits 0017  
    start_initialization 07FE                ___latbits 0000                _configPWM 07E5  
             ?_configPWM 0070            __size_of_main 0015              ??_configPWM 0070  
