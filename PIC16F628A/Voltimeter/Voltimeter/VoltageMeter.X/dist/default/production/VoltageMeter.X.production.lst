

Microchip Technology PIC LITE Macro Assembler V1.37 build -260352376 
                                                                                               Sat Jun 11 14:06:56 2016

Microchip Technology Omniscient Code Generator v1.37 (Free mode) build 201603110536
     1                           	processor	16F628A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	idataBANK2,global,class=CODE,delta=2
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1
    11                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	maintext,global,class=CODE,split=1,delta=2
    15                           	psect	text1,local,class=CODE,merge=1,delta=2
    16                           	psect	text2,local,class=CODE,merge=1,delta=2
    17                           	psect	text3,local,class=CODE,merge=1,delta=2
    18                           	psect	text4,local,class=CODE,merge=1,delta=2
    19                           	psect	text5,local,class=CODE,merge=1,delta=2
    20                           	psect	text6,local,class=CODE,merge=1,delta=2
    21                           	psect	text7,local,class=CODE,merge=1,delta=2
    22                           	psect	text8,local,class=CODE,merge=1,delta=2
    23                           	psect	text9,local,class=CODE,merge=1,delta=2
    24                           	psect	intentry,global,class=CODE,delta=2
    25                           	psect	text10,local,class=CODE,merge=1,delta=2
    26                           	psect	text11,local,class=CODE,merge=1,delta=2
    27                           	psect	text12,local,class=CODE,merge=1,delta=2
    28                           	psect	text13,local,class=CODE,merge=1,delta=2
    29                           	psect	text14,local,class=CODE,merge=1,delta=2
    30                           	psect	text15,local,class=CODE,merge=1,delta=2
    31                           	dabs	1,0x7E,2
    32  0000                     	;# 
    33  0001                     	;# 
    34  0002                     	;# 
    35  0003                     	;# 
    36  0004                     	;# 
    37  0005                     	;# 
    38  0006                     	;# 
    39  000A                     	;# 
    40  000B                     	;# 
    41  000C                     	;# 
    42  000E                     	;# 
    43  000E                     	;# 
    44  000F                     	;# 
    45  0010                     	;# 
    46  0011                     	;# 
    47  0012                     	;# 
    48  0015                     	;# 
    49  0015                     	;# 
    50  0016                     	;# 
    51  0017                     	;# 
    52  0018                     	;# 
    53  0019                     	;# 
    54  001A                     	;# 
    55  001F                     	;# 
    56  0081                     	;# 
    57  0085                     	;# 
    58  0086                     	;# 
    59  008C                     	;# 
    60  008E                     	;# 
    61  0092                     	;# 
    62  0098                     	;# 
    63  0099                     	;# 
    64  009A                     	;# 
    65  009B                     	;# 
    66  009C                     	;# 
    67  009D                     	;# 
    68  009F                     	;# 
    69                           
    70                           	psect	idataBANK0
    71  079B                     __pidataBANK0:	
    72                           
    73                           ;initializer for _controle
    74  079B  3401               	retlw	1
    75                           
    76                           	psect	idataBANK2
    77  0787                     __pidataBANK2:	
    78                           
    79                           ;initializer for Interrupt@F619
    80  0787  343F               	retlw	63
    81  0788  3400               	retlw	0
    82  0789  3406               	retlw	6
    83  078A  3400               	retlw	0
    84  078B  345B               	retlw	91
    85  078C  3400               	retlw	0
    86  078D  344F               	retlw	79
    87  078E  3400               	retlw	0
    88  078F  3466               	retlw	102
    89  0790  3400               	retlw	0
    90  0791  346D               	retlw	109
    91  0792  3400               	retlw	0
    92  0793  347D               	retlw	125
    93  0794  3400               	retlw	0
    94  0795  3407               	retlw	7
    95  0796  3400               	retlw	0
    96  0797  347F               	retlw	127
    97  0798  3400               	retlw	0
    98  0799  3467               	retlw	103
    99  079A  3400               	retlw	0
   100                           
   101                           	psect	nvBANK0
   102  005A                     __pnvBANK0:	
   103  005A                     _value:	
   104  005A                     	ds	3
   105  001F                     _CMCON	set	31
   106  000B                     _INTCONbits	set	11
   107  0006                     _PORTB	set	6
   108  0001                     _TMR0	set	1
   109  0028                     _RA0	set	40
   110  0029                     _RA1	set	41
   111  002A                     _RA2	set	42
   112  002B                     _RA3	set	43
   113  002E                     _RA6	set	46
   114  002F                     _RA7	set	47
   115  0081                     _OPTION_REGbits	set	129
   116  0085                     _TRISA	set	133
   117  0086                     _TRISB	set	134
   118                           
   119                           ; #config settings
   120  0000                     
   121                           	psect	cinit
   122  0011                     start_initialization:	
   123  0011                     __initialization:	
   124                           
   125                           ; Clear objects allocated to BANK0
   126  0011  01D6               	clrf	__pbssBANK0& (0+127)
   127  0012  01D7               	clrf	(__pbssBANK0+1)& (0+127)
   128  0013  01D8               	clrf	(__pbssBANK0+2)& (0+127)
   129  0014  01D9               	clrf	(__pbssBANK0+3)& (0+127)
   130                           
   131                           ; Initialize objects allocated to BANK2
   132  0015  1283               	bcf	3,5	;RP0=0, select bank2
   133  0016  1703               	bsf	3,6	;RP1=1, select bank2
   134  0017  2787               	fcall	__pidataBANK2	;fetch initializer
   135  0018  00A0               	movwf	__pdataBANK2& (0+127)
   136  0019  2788               	fcall	__pidataBANK2+1	;fetch initializer
   137  001A  00A1               	movwf	(__pdataBANK2+1)& (0+127)
   138  001B  2789               	fcall	__pidataBANK2+2	;fetch initializer
   139  001C  00A2               	movwf	(__pdataBANK2+2)& (0+127)
   140  001D  278A               	fcall	__pidataBANK2+3	;fetch initializer
   141  001E  00A3               	movwf	(__pdataBANK2+3)& (0+127)
   142  001F  278B               	fcall	__pidataBANK2+4	;fetch initializer
   143  0020  00A4               	movwf	(__pdataBANK2+4)& (0+127)
   144  0021  278C               	fcall	__pidataBANK2+5	;fetch initializer
   145  0022  00A5               	movwf	(__pdataBANK2+5)& (0+127)
   146  0023  278D               	fcall	__pidataBANK2+6	;fetch initializer
   147  0024  00A6               	movwf	(__pdataBANK2+6)& (0+127)
   148  0025  278E               	fcall	__pidataBANK2+7	;fetch initializer
   149  0026  00A7               	movwf	(__pdataBANK2+7)& (0+127)
   150  0027  278F               	fcall	__pidataBANK2+8	;fetch initializer
   151  0028  00A8               	movwf	(__pdataBANK2+8)& (0+127)
   152  0029  2790               	fcall	__pidataBANK2+9	;fetch initializer
   153  002A  00A9               	movwf	(__pdataBANK2+9)& (0+127)
   154  002B  2791               	fcall	__pidataBANK2+10	;fetch initializer
   155  002C  00AA               	movwf	(__pdataBANK2+10)& (0+127)
   156  002D  2792               	fcall	__pidataBANK2+11	;fetch initializer
   157  002E  00AB               	movwf	(__pdataBANK2+11)& (0+127)
   158  002F  2793               	fcall	__pidataBANK2+12	;fetch initializer
   159  0030  00AC               	movwf	(__pdataBANK2+12)& (0+127)
   160  0031  2794               	fcall	__pidataBANK2+13	;fetch initializer
   161  0032  00AD               	movwf	(__pdataBANK2+13)& (0+127)
   162  0033  2795               	fcall	__pidataBANK2+14	;fetch initializer
   163  0034  00AE               	movwf	(__pdataBANK2+14)& (0+127)
   164  0035  2796               	fcall	__pidataBANK2+15	;fetch initializer
   165  0036  00AF               	movwf	(__pdataBANK2+15)& (0+127)
   166  0037  2797               	fcall	__pidataBANK2+16	;fetch initializer
   167  0038  00B0               	movwf	(__pdataBANK2+16)& (0+127)
   168  0039  2798               	fcall	__pidataBANK2+17	;fetch initializer
   169  003A  00B1               	movwf	(__pdataBANK2+17)& (0+127)
   170  003B  2799               	fcall	__pidataBANK2+18	;fetch initializer
   171  003C  00B2               	movwf	(__pdataBANK2+18)& (0+127)
   172  003D  279A               	fcall	__pidataBANK2+19	;fetch initializer
   173  003E  00B3               	movwf	(__pdataBANK2+19)& (0+127)
   174                           
   175                           ; Initialize objects allocated to BANK0
   176  003F  1283               	bcf	3,5	;RP0=0, select bank0
   177  0040  1303               	bcf	3,6	;RP1=0, select bank0
   178  0041  279B               	fcall	__pidataBANK0	;fetch initializer
   179  0042  00DD               	movwf	__pdataBANK0& (0+127)
   180  0043                     end_of_initialization:	
   181                           ;End of C runtime variable initialization code
   182                           
   183  0043                     __end_of__initialization:	
   184  0043  0183               	clrf	3
   185  0044  2F1A               	ljmp	_main	;jump to C main() function
   186                           
   187                           	psect	bssBANK0
   188  0056                     __pbssBANK0:	
   189  0056                     _cen:	
   190  0056                     	ds	1
   191  0057                     _counter:	
   192  0057                     	ds	1
   193  0058                     _dez:	
   194  0058                     	ds	1
   195  0059                     _uni:	
   196  0059                     	ds	1
   197                           
   198                           	psect	dataBANK0
   199  005D                     __pdataBANK0:	
   200  005D                     _controle:	
   201  005D                     	ds	1
   202                           
   203                           	psect	dataBANK2
   204  0120                     __pdataBANK2:	
   205  0120                     Interrupt@F619:	
   206  0120                     	ds	20
   207                           
   208                           	psect	cstackBANK1
   209  00A0                     __pcstackBANK1:	
   210  00A0                     ??_readSerial:	
   211  00A0                     ?___ftpack:	
   212                           ; 1 bytes @ 0x0
   213                           
   214  00A0                     ___ftpack@arg:	
   215                           ; 3 bytes @ 0x0
   216                           
   217                           
   218                           ; 3 bytes @ 0x0
   219  00A0                     	ds	2
   220  00A2                     readSerial@valueADC:	
   221                           
   222                           ; 1 bytes @ 0x2
   223  00A2                     	ds	1
   224  00A3                     ___ftpack@exp:	
   225  00A3                     readSerial@i:	
   226                           ; 1 bytes @ 0x3
   227                           
   228                           
   229                           ; 2 bytes @ 0x3
   230  00A3                     	ds	1
   231  00A4                     ___ftpack@sign:	
   232                           
   233                           ; 1 bytes @ 0x4
   234  00A4                     	ds	1
   235  00A5                     ??___ftpack:	
   236                           
   237                           ; 1 bytes @ 0x5
   238  00A5                     	ds	3
   239  00A8                     ?___awtoft:	
   240  00A8                     ?___lbtoft:	
   241                           ; 3 bytes @ 0x8
   242                           
   243  00A8                     ___awtoft@c:	
   244                           ; 3 bytes @ 0x8
   245                           
   246                           
   247                           ; 2 bytes @ 0x8
   248  00A8                     	ds	3
   249  00AB                     ??___awtoft:	
   250  00AB                     ??___lbtoft:	
   251                           ; 1 bytes @ 0xB
   252                           
   253                           
   254                           ; 1 bytes @ 0xB
   255  00AB                     	ds	2
   256  00AD                     ___awtoft@sign:	
   257                           
   258                           ; 1 bytes @ 0xD
   259  00AD                     	ds	2
   260  00AF                     ___lbtoft@c:	
   261                           
   262                           ; 1 bytes @ 0xF
   263  00AF                     	ds	1
   264  00B0                     ?___ftdiv:	
   265  00B0                     ___ftdiv@f2:	
   266                           ; 3 bytes @ 0x10
   267                           
   268                           
   269                           ; 3 bytes @ 0x10
   270  00B0                     	ds	3
   271  00B3                     ___ftdiv@f1:	
   272                           
   273                           ; 3 bytes @ 0x13
   274  00B3                     	ds	3
   275  00B6                     ??___ftdiv:	
   276                           
   277                           ; 1 bytes @ 0x16
   278  00B6                     	ds	4
   279  00BA                     ___ftdiv@cntr:	
   280                           
   281                           ; 1 bytes @ 0x1A
   282  00BA                     	ds	1
   283  00BB                     ___ftdiv@f3:	
   284                           
   285                           ; 3 bytes @ 0x1B
   286  00BB                     	ds	3
   287  00BE                     ___ftdiv@exp:	
   288                           
   289                           ; 1 bytes @ 0x1E
   290  00BE                     	ds	1
   291  00BF                     ___ftdiv@sign:	
   292                           
   293                           ; 1 bytes @ 0x1F
   294  00BF                     	ds	1
   295  00C0                     ?_averageADC:	
   296                           
   297                           ; 3 bytes @ 0x20
   298  00C0                     	ds	3
   299  00C3                     ??_averageADC:	
   300                           
   301                           ; 1 bytes @ 0x23
   302  00C3                     	ds	2
   303  00C5                     averageADC@readings:	
   304                           
   305                           ; 2 bytes @ 0x25
   306  00C5                     	ds	2
   307  00C7                     averageADC@i:	
   308                           
   309                           ; 1 bytes @ 0x27
   310  00C7                     	ds	1
   311  00C8                     averageADC@qnt:	
   312                           
   313                           ; 1 bytes @ 0x28
   314  00C8                     	ds	1
   315  00C9                     ?___ftmul:	
   316  00C9                     ___ftmul@f1:	
   317                           ; 3 bytes @ 0x29
   318                           
   319                           
   320                           ; 3 bytes @ 0x29
   321  00C9                     	ds	3
   322  00CC                     ___ftmul@f2:	
   323                           
   324                           ; 3 bytes @ 0x2C
   325  00CC                     	ds	3
   326  00CF                     ??___ftmul:	
   327                           
   328                           ; 1 bytes @ 0x2F
   329  00CF                     	ds	4
   330  00D3                     ___ftmul@exp:	
   331                           
   332                           ; 1 bytes @ 0x33
   333  00D3                     	ds	1
   334  00D4                     ___ftmul@f3_as_product:	
   335                           
   336                           ; 3 bytes @ 0x34
   337  00D4                     	ds	3
   338  00D7                     ___ftmul@cntr:	
   339                           
   340                           ; 1 bytes @ 0x37
   341  00D7                     	ds	1
   342  00D8                     ___ftmul@sign:	
   343                           
   344                           ; 1 bytes @ 0x38
   345  00D8                     	ds	1
   346  00D9                     ?_readADC:	
   347                           
   348                           ; 3 bytes @ 0x39
   349  00D9                     	ds	3
   350  00DC                     ??_readADC:	
   351  00DC                     _readADC$521:	
   352                           ; 1 bytes @ 0x3C
   353                           
   354                           
   355                           ; 3 bytes @ 0x3C
   356  00DC                     	ds	3
   357  00DF                     ??_main:	
   358                           
   359                           	psect	cstackCOMMON
   360  0070                     __pcstackCOMMON:	
   361                           ; 1 bytes @ 0x3F
   362                           
   363  0070                     ?___ftge:	
   364  0070                     ?_Interrupt:	
   365                           ; 1 bit 
   366                           
   367  0070                     ?_main:	
   368                           ; 1 bytes @ 0x0
   369                           
   370  0070                     ?_readSerial:	
   371                           ; 1 bytes @ 0x0
   372                           
   373  0070                     ?___awmod:	
   374                           ; 1 bytes @ 0x0
   375                           
   376  0070                     ?i1___ftpack:	
   377                           ; 2 bytes @ 0x0
   378                           
   379  0070                     ___awmod@divisor:	
   380                           ; 3 bytes @ 0x0
   381                           
   382  0070                     ___ftge@ff1:	
   383                           ; 2 bytes @ 0x0
   384                           
   385  0070                     i1___ftpack@arg:	
   386                           ; 3 bytes @ 0x0
   387                           
   388                           
   389                           ; 3 bytes @ 0x0
   390  0070                     	ds	2
   391  0072                     ___awmod@dividend:	
   392                           
   393                           ; 2 bytes @ 0x2
   394  0072                     	ds	1
   395  0073                     i1___ftpack@exp:	
   396  0073                     ___ftge@ff2:	
   397                           ; 1 bytes @ 0x3
   398                           
   399                           
   400                           ; 3 bytes @ 0x3
   401  0073                     	ds	1
   402  0074                     ??___awmod:	
   403  0074                     i1___ftpack@sign:	
   404                           ; 1 bytes @ 0x4
   405                           
   406                           
   407                           ; 1 bytes @ 0x4
   408  0074                     	ds	1
   409  0075                     ??i1___ftpack:	
   410  0075                     ___awmod@counter:	
   411                           ; 1 bytes @ 0x5
   412                           
   413                           
   414                           ; 1 bytes @ 0x5
   415  0075                     	ds	1
   416  0076                     ??___ftge:	
   417  0076                     ___awmod@sign:	
   418                           ; 1 bytes @ 0x6
   419                           
   420                           
   421                           ; 1 bytes @ 0x6
   422  0076                     	ds	1
   423  0077                     ?___awdiv:	
   424  0077                     ___awdiv@divisor:	
   425                           ; 2 bytes @ 0x7
   426                           
   427                           
   428                           ; 2 bytes @ 0x7
   429  0077                     	ds	1
   430  0078                     ?i1___ftmul:	
   431  0078                     i1___ftmul@f1:	
   432                           ; 3 bytes @ 0x8
   433                           
   434                           
   435                           ; 3 bytes @ 0x8
   436  0078                     	ds	1
   437  0079                     ___awdiv@dividend:	
   438                           
   439                           ; 2 bytes @ 0x9
   440  0079                     	ds	2
   441  007B                     ??___awdiv:	
   442  007B                     i1___ftmul@f2:	
   443                           ; 1 bytes @ 0xB
   444                           
   445                           
   446                           ; 3 bytes @ 0xB
   447  007B                     	ds	3
   448                           
   449                           	psect	cstackBANK0
   450  0020                     __pcstackBANK0:	
   451  0020                     ??i1___ftmul:	
   452  0020                     ___awdiv@counter:	
   453                           ; 1 bytes @ 0x0
   454                           
   455                           
   456                           ; 1 bytes @ 0x0
   457  0020                     	ds	1
   458  0021                     ___awdiv@sign:	
   459                           
   460                           ; 1 bytes @ 0x1
   461  0021                     	ds	1
   462  0022                     ___awdiv@quotient:	
   463                           
   464                           ; 2 bytes @ 0x2
   465  0022                     	ds	2
   466  0024                     i1___ftmul@exp:	
   467                           
   468                           ; 1 bytes @ 0x4
   469  0024                     	ds	1
   470  0025                     i1___ftmul@f3_as_product:	
   471                           
   472                           ; 3 bytes @ 0x5
   473  0025                     	ds	3
   474  0028                     i1___ftmul@cntr:	
   475                           
   476                           ; 1 bytes @ 0x8
   477  0028                     	ds	1
   478  0029                     i1___ftmul@sign:	
   479                           
   480                           ; 1 bytes @ 0x9
   481  0029                     	ds	1
   482  002A                     ?___fttol:	
   483  002A                     ___fttol@f1:	
   484                           ; 4 bytes @ 0xA
   485                           
   486                           
   487                           ; 3 bytes @ 0xA
   488  002A                     	ds	4
   489  002E                     ??___fttol:	
   490                           
   491                           ; 1 bytes @ 0xE
   492  002E                     	ds	4
   493  0032                     ___fttol@sign1:	
   494                           
   495                           ; 1 bytes @ 0x12
   496  0032                     	ds	1
   497  0033                     ___fttol@lval:	
   498                           
   499                           ; 4 bytes @ 0x13
   500  0033                     	ds	4
   501  0037                     ___fttol@exp1:	
   502                           
   503                           ; 1 bytes @ 0x17
   504  0037                     	ds	1
   505  0038                     ??_Interrupt:	
   506                           
   507                           ; 1 bytes @ 0x18
   508  0038                     	ds	8
   509  0040                     Interrupt@segments:	
   510                           
   511                           ; 20 bytes @ 0x20
   512  0040                     	ds	20
   513  0054                     Interrupt@number:	
   514                           
   515                           ; 2 bytes @ 0x34
   516  0054                     	ds	2
   517                           
   518                           	psect	maintext
   519  071A                     __pmaintext:	
   520 ;;
   521 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   522 ;;
   523 ;; *************** function _main *****************
   524 ;; Defined at:
   525 ;;		line 137 in file "main.c"
   526 ;; Parameters:    Size  Location     Type
   527 ;;		None
   528 ;; Auto vars:     Size  Location     Type
   529 ;;		None
   530 ;; Return value:  Size  Location     Type
   531 ;;                  1    wreg      void 
   532 ;; Registers used:
   533 ;;		wreg, status,2, status,0, pclath, cstack
   534 ;; Tracked objects:
   535 ;;		On entry : B00/0
   536 ;;		On exit  : 0/0
   537 ;;		Unchanged: 0/0
   538 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   539 ;;      Params:         0       0       0       0
   540 ;;      Locals:         0       0       0       0
   541 ;;      Temps:          0       0       0       0
   542 ;;      Totals:         0       0       0       0
   543 ;;Total ram usage:        0 bytes
   544 ;; Hardware stack levels required when called:    7
   545 ;; This function calls:
   546 ;;		_readADC
   547 ;; This function is called by:
   548 ;;		Startup code after reset
   549 ;; This function uses a non-reentrant model
   550 ;;
   551                           
   552                           
   553                           ;psect for function _main
   554  071A                     _main:	
   555                           
   556                           ;main.c: 139: CMCON = 0x07;
   557                           
   558                           ;incstack = 0
   559                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   560  071A  3007               	movlw	7
   561  071B  1283               	bcf	3,5	;RP0=0, select bank0
   562  071C  1303               	bcf	3,6	;RP1=0, select bank0
   563  071D  009F               	movwf	31	;volatile
   564                           
   565                           ;main.c: 140: TRISB = 0x00;
   566  071E  1683               	bsf	3,5	;RP0=1, select bank1
   567  071F  1303               	bcf	3,6	;RP1=0, select bank1
   568  0720  0186               	clrf	6	;volatile
   569                           
   570                           ;main.c: 141: TRISA = 0b00110100;
   571  0721  3034               	movlw	52
   572  0722  0085               	movwf	5	;volatile
   573                           
   574                           ;main.c: 144: INTCONbits.GIE = 1;
   575  0723  178B               	bsf	11,7	;volatile
   576                           
   577                           ;main.c: 145: INTCONbits.T0IE = 1;
   578  0724  168B               	bsf	11,5	;volatile
   579                           
   580                           ;main.c: 146: INTCONbits.T0IF = 1;
   581  0725  150B               	bsf	11,2	;volatile
   582                           
   583                           ;main.c: 147: OPTION_REGbits.T0CS = 0;
   584  0726  1281               	bcf	1,5	;volatile
   585                           
   586                           ;main.c: 148: OPTION_REGbits.PSA = 0;
   587  0727  1181               	bcf	1,3	;volatile
   588                           
   589                           ;main.c: 149: OPTION_REGbits.PS = 1;
   590  0728  0801               	movf	1,w	;volatile
   591  0729  39F8               	andlw	-8
   592  072A  3801               	iorlw	1
   593  072B  0081               	movwf	1	;volatile
   594                           
   595                           ;main.c: 150: TMR0 = 0;
   596  072C  1283               	bcf	3,5	;RP0=0, select bank0
   597  072D  1303               	bcf	3,6	;RP1=0, select bank0
   598  072E  0181               	clrf	1	;volatile
   599                           
   600                           ;main.c: 152: value = 0.0;
   601  072F  3000               	movlw	0
   602  0730  00DA               	movwf	_value
   603  0731  3000               	movlw	0
   604  0732  00DB               	movwf	_value+1
   605  0733  3000               	movlw	0
   606  0734                     L1:	
   607  0734  00DC               	movwf	_value+2
   608                           
   609                           ;main.c: 159: value = readADC();
   610                           
   611                           ;main.c: 154: while(1){
   612  0735  26E9               	fcall	_readADC
   613  0736  1683               	bsf	3,5	;RP0=1, select bank1
   614  0737  1303               	bcf	3,6	;RP1=0, select bank1
   615  0738  0859               	movf	?_readADC^(0+128),w
   616  0739  1283               	bcf	3,5	;RP0=0, select bank0
   617  073A  1303               	bcf	3,6	;RP1=0, select bank0
   618  073B  00DA               	movwf	_value
   619  073C  1683               	bsf	3,5	;RP0=1, select bank1
   620  073D  1303               	bcf	3,6	;RP1=0, select bank1
   621  073E  085A               	movf	(?_readADC+1)^(0+128),w
   622  073F  1283               	bcf	3,5	;RP0=0, select bank0
   623  0740  1303               	bcf	3,6	;RP1=0, select bank0
   624  0741  00DB               	movwf	_value+1
   625  0742  1683               	bsf	3,5	;RP0=1, select bank1
   626  0743  1303               	bcf	3,6	;RP1=0, select bank1
   627  0744  085B               	movf	(?_readADC+2)^(0+128),w
   628  0745  1283               	bcf	3,5	;RP0=0, select bank0
   629  0746  1303               	bcf	3,6	;RP1=0, select bank0
   630  0747  2F34               	goto	L1
   631  0748                     __end_of_main:	
   632                           ;main.c: 163: }
   633                           ;main.c: 165: return;
   634                           
   635                           
   636                           	psect	text1
   637  06E9                     __ptext1:	
   638 ;; *************** function _readADC *****************
   639 ;; Defined at:
   640 ;;		line 194 in file "main.c"
   641 ;; Parameters:    Size  Location     Type
   642 ;;		None
   643 ;; Auto vars:     Size  Location     Type
   644 ;;		None
   645 ;; Return value:  Size  Location     Type
   646 ;;                  3   57[BANK1 ] float 
   647 ;; Registers used:
   648 ;;		wreg, status,2, status,0, pclath, cstack
   649 ;; Tracked objects:
   650 ;;		On entry : 0/0
   651 ;;		On exit  : 0/0
   652 ;;		Unchanged: 0/0
   653 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   654 ;;      Params:         0       0       3       0
   655 ;;      Locals:         0       0       3       0
   656 ;;      Temps:          0       0       0       0
   657 ;;      Totals:         0       0       6       0
   658 ;;Total ram usage:        6 bytes
   659 ;; Hardware stack levels used:    1
   660 ;; Hardware stack levels required when called:    6
   661 ;; This function calls:
   662 ;;		___ftdiv
   663 ;;		___ftmul
   664 ;;		_averageADC
   665 ;; This function is called by:
   666 ;;		_main
   667 ;; This function uses a non-reentrant model
   668 ;;
   669                           
   670                           
   671                           ;psect for function _readADC
   672  06E9                     _readADC:	
   673                           
   674                           ;main.c: 196: return averageADC(100) * 15.0 / 255.0;
   675                           
   676                           ;incstack = 0
   677                           ; Regs used in _readADC: [wreg+status,2+status,0+pclath+cstack]
   678  06E9  3000               	movlw	0
   679  06EA  1683               	bsf	3,5	;RP0=1, select bank1
   680  06EB  1303               	bcf	3,6	;RP1=0, select bank1
   681  06EC  00C9               	movwf	___ftmul@f1^(0+128)
   682  06ED  3070               	movlw	112
   683  06EE  00CA               	movwf	(___ftmul@f1+1)^(0+128)
   684  06EF  3041               	movlw	65
   685  06F0  00CB               	movwf	(___ftmul@f1+2)^(0+128)
   686  06F1  3064               	movlw	100
   687  06F2  2674               	fcall	_averageADC
   688  06F3  1683               	bsf	3,5	;RP0=1, select bank1
   689  06F4  1303               	bcf	3,6	;RP1=0, select bank1
   690  06F5  0840               	movf	?_averageADC^(0+128),w
   691  06F6  00CC               	movwf	___ftmul@f2^(0+128)
   692  06F7  0841               	movf	(?_averageADC+1)^(0+128),w
   693  06F8  00CD               	movwf	(___ftmul@f2+1)^(0+128)
   694  06F9  0842               	movf	(?_averageADC+2)^(0+128),w
   695  06FA  00CE               	movwf	(___ftmul@f2+2)^(0+128)
   696  06FB  21B3               	fcall	___ftmul
   697  06FC  1683               	bsf	3,5	;RP0=1, select bank1
   698  06FD  1303               	bcf	3,6	;RP1=0, select bank1
   699  06FE  0849               	movf	?___ftmul^(0+128),w
   700  06FF  00DC               	movwf	_readADC$521^(0+128)
   701  0700  084A               	movf	(?___ftmul+1)^(0+128),w
   702  0701  00DD               	movwf	(_readADC$521+1)^(0+128)
   703  0702  084B               	movf	(?___ftmul+2)^(0+128),w
   704  0703  00DE               	movwf	(_readADC$521+2)^(0+128)
   705                           
   706                           ;main.c: 196: return averageADC(100) * 15.0 / 255.0;
   707  0704  3000               	movlw	0
   708  0705  00B0               	movwf	___ftdiv@f2^(0+128)
   709  0706  307F               	movlw	127
   710  0707  00B1               	movwf	(___ftdiv@f2+1)^(0+128)
   711  0708  3043               	movlw	67
   712  0709  00B2               	movwf	(___ftdiv@f2+2)^(0+128)
   713  070A  085C               	movf	_readADC$521^(0+128),w
   714  070B  00B3               	movwf	___ftdiv@f1^(0+128)
   715  070C  085D               	movf	(_readADC$521+1)^(0+128),w
   716  070D  00B4               	movwf	(___ftdiv@f1+1)^(0+128)
   717  070E  085E               	movf	(_readADC$521+2)^(0+128),w
   718  070F  00B5               	movwf	(___ftdiv@f1+2)^(0+128)
   719  0710  2353               	fcall	___ftdiv
   720  0711  1683               	bsf	3,5	;RP0=1, select bank1
   721  0712  1303               	bcf	3,6	;RP1=0, select bank1
   722  0713  0830               	movf	?___ftdiv^(0+128),w
   723  0714  00D9               	movwf	?_readADC^(0+128)
   724  0715  0831               	movf	(?___ftdiv+1)^(0+128),w
   725  0716  00DA               	movwf	(?_readADC+1)^(0+128)
   726  0717  0832               	movf	(?___ftdiv+2)^(0+128),w
   727  0718  00DB               	movwf	(?_readADC+2)^(0+128)
   728  0719  0008               	return
   729  071A                     __end_of_readADC:	
   730                           
   731                           	psect	text2
   732  0674                     __ptext2:	
   733 ;; *************** function _averageADC *****************
   734 ;; Defined at:
   735 ;;		line 188 in file "main.c"
   736 ;; Parameters:    Size  Location     Type
   737 ;;  qnt             1    wreg     unsigned char 
   738 ;; Auto vars:     Size  Location     Type
   739 ;;  qnt             1   40[BANK1 ] unsigned char 
   740 ;;  i               1   39[BANK1 ] unsigned char 
   741 ;;  readings        2   37[BANK1 ] int 
   742 ;; Return value:  Size  Location     Type
   743 ;;                  3   32[BANK1 ] float 
   744 ;; Registers used:
   745 ;;		wreg, status,2, status,0, pclath, cstack
   746 ;; Tracked objects:
   747 ;;		On entry : 0/0
   748 ;;		On exit  : 0/0
   749 ;;		Unchanged: 0/0
   750 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   751 ;;      Params:         0       0       3       0
   752 ;;      Locals:         0       0       4       0
   753 ;;      Temps:          0       0       2       0
   754 ;;      Totals:         0       0       9       0
   755 ;;Total ram usage:        9 bytes
   756 ;; Hardware stack levels used:    1
   757 ;; Hardware stack levels required when called:    5
   758 ;; This function calls:
   759 ;;		___awtoft
   760 ;;		___ftdiv
   761 ;;		___lbtoft
   762 ;;		_readSerial
   763 ;; This function is called by:
   764 ;;		_readADC
   765 ;; This function uses a non-reentrant model
   766 ;;
   767                           
   768                           
   769                           ;psect for function _averageADC
   770  0674                     _averageADC:	
   771                           
   772                           ;incstack = 0
   773                           ; Regs used in _averageADC: [wreg+status,2+status,0+pclath+cstack]
   774                           ;averageADC@qnt stored from wreg
   775  0674  1683               	bsf	3,5	;RP0=1, select bank1
   776  0675  1303               	bcf	3,6	;RP1=0, select bank1
   777  0676  00C8               	movwf	averageADC@qnt^(0+128)
   778                           
   779                           ;main.c: 189: int readings = 0;
   780  0677  01C5               	clrf	averageADC@readings^(0+128)
   781  0678  01C6               	clrf	(averageADC@readings+1)^(0+128)
   782                           
   783                           ;main.c: 190: for(char i = 0; i<qnt; i++) readings += readSerial();
   784  0679  01C7               	clrf	averageADC@i^(0+128)
   785  067A                     l1231:	
   786  067A  0848               	movf	averageADC@qnt^(0+128),w
   787  067B  0247               	subwf	averageADC@i^(0+128),w
   788  067C  1803               	btfsc	3,0
   789  067D  2E8E               	goto	l1233
   790  067E  26AF               	fcall	_readSerial
   791  067F  1683               	bsf	3,5	;RP0=1, select bank1
   792  0680  1303               	bcf	3,6	;RP1=0, select bank1
   793  0681  00C3               	movwf	??_averageADC^(0+128)
   794  0682  01C4               	clrf	(??_averageADC^(0+128)+1)
   795  0683  0843               	movf	??_averageADC^(0+128),w
   796  0684  07C5               	addwf	averageADC@readings^(0+128),f
   797  0685  1803               	skipnc
   798  0686  0AC6               	incf	(averageADC@readings+1)^(0+128),f
   799  0687  0844               	movf	(??_averageADC+1)^(0+128),w
   800  0688  07C6               	addwf	(averageADC@readings+1)^(0+128),f
   801  0689  3001               	movlw	1
   802  068A  00C3               	movwf	??_averageADC^(0+128)
   803  068B  0843               	movf	??_averageADC^(0+128),w
   804  068C  07C7               	addwf	averageADC@i^(0+128),f
   805  068D  2E7A               	goto	l1231
   806  068E                     l1233:	
   807                           
   808                           ;main.c: 191: return (float)readings / (float)qnt;
   809  068E  0848               	movf	averageADC@qnt^(0+128),w
   810  068F  276B               	fcall	___lbtoft
   811  0690  1683               	bsf	3,5	;RP0=1, select bank1
   812  0691  1303               	bcf	3,6	;RP1=0, select bank1
   813  0692  0828               	movf	?___lbtoft^(0+128),w
   814  0693  00B0               	movwf	___ftdiv@f2^(0+128)
   815  0694  0829               	movf	(?___lbtoft+1)^(0+128),w
   816  0695  00B1               	movwf	(___ftdiv@f2+1)^(0+128)
   817  0696  082A               	movf	(?___lbtoft+2)^(0+128),w
   818  0697  00B2               	movwf	(___ftdiv@f2+2)^(0+128)
   819  0698  0846               	movf	(averageADC@readings+1)^(0+128),w
   820  0699  00A9               	movwf	(___awtoft@c+1)^(0+128)
   821  069A  0845               	movf	averageADC@readings^(0+128),w
   822  069B  00A8               	movwf	___awtoft@c^(0+128)
   823  069C  2748               	fcall	___awtoft
   824  069D  1683               	bsf	3,5	;RP0=1, select bank1
   825  069E  1303               	bcf	3,6	;RP1=0, select bank1
   826  069F  0828               	movf	?___awtoft^(0+128),w
   827  06A0  00B3               	movwf	___ftdiv@f1^(0+128)
   828  06A1  0829               	movf	(?___awtoft+1)^(0+128),w
   829  06A2  00B4               	movwf	(___ftdiv@f1+1)^(0+128)
   830  06A3  082A               	movf	(?___awtoft+2)^(0+128),w
   831  06A4  00B5               	movwf	(___ftdiv@f1+2)^(0+128)
   832  06A5  2353               	fcall	___ftdiv
   833  06A6  1683               	bsf	3,5	;RP0=1, select bank1
   834  06A7  1303               	bcf	3,6	;RP1=0, select bank1
   835  06A8  0830               	movf	?___ftdiv^(0+128),w
   836  06A9  00C0               	movwf	?_averageADC^(0+128)
   837  06AA  0831               	movf	(?___ftdiv+1)^(0+128),w
   838  06AB  00C1               	movwf	(?_averageADC+1)^(0+128)
   839  06AC  0832               	movf	(?___ftdiv+2)^(0+128),w
   840  06AD  00C2               	movwf	(?_averageADC+2)^(0+128)
   841  06AE  0008               	return
   842  06AF                     __end_of_averageADC:	
   843                           
   844                           	psect	text3
   845  06AF                     __ptext3:	
   846 ;; *************** function _readSerial *****************
   847 ;; Defined at:
   848 ;;		line 169 in file "main.c"
   849 ;; Parameters:    Size  Location     Type
   850 ;;		None
   851 ;; Auto vars:     Size  Location     Type
   852 ;;  i               2    3[BANK1 ] int 
   853 ;;  valueADC        1    2[BANK1 ] unsigned char 
   854 ;; Return value:  Size  Location     Type
   855 ;;                  1    wreg      unsigned char 
   856 ;; Registers used:
   857 ;;		wreg, status,2, status,0
   858 ;; Tracked objects:
   859 ;;		On entry : 0/0
   860 ;;		On exit  : 0/0
   861 ;;		Unchanged: 0/0
   862 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   863 ;;      Params:         0       0       0       0
   864 ;;      Locals:         0       0       3       0
   865 ;;      Temps:          0       0       2       0
   866 ;;      Totals:         0       0       5       0
   867 ;;Total ram usage:        5 bytes
   868 ;; Hardware stack levels used:    1
   869 ;; Hardware stack levels required when called:    3
   870 ;; This function calls:
   871 ;;		Nothing
   872 ;; This function is called by:
   873 ;;		_averageADC
   874 ;; This function uses a non-reentrant model
   875 ;;
   876                           
   877                           
   878                           ;psect for function _readSerial
   879  06AF                     _readSerial:	
   880                           
   881                           ;main.c: 170: char valueADC = 0;
   882                           
   883                           ;incstack = 0
   884                           ; Regs used in _readSerial: [wreg+status,2+status,0]
   885  06AF  1683               	bsf	3,5	;RP0=1, select bank1
   886  06B0  1303               	bcf	3,6	;RP1=0, select bank1
   887  06B1  01A2               	clrf	readSerial@valueADC^(0+128)
   888                           
   889                           ;main.c: 172: RA0 = 1;
   890  06B2  1283               	bcf	3,5	;RP0=0, select bank0
   891  06B3  1303               	bcf	3,6	;RP1=0, select bank0
   892  06B4  1405               	bsf	5,0	;volatile
   893                           
   894                           ;main.c: 173: _delay((unsigned long)2 * 4000000 / 4000000);
   895  06B5  2EB6               	nop2	;2 cycle nop
   896                           
   897                           ;main.c: 174: RA0 = 0;
   898  06B6  1283               	bcf	3,5	;RP0=0, select bank0
   899  06B7  1303               	bcf	3,6	;RP1=0, select bank0
   900  06B8  1005               	bcf	5,0	;volatile
   901                           
   902                           ;main.c: 175: _delay((unsigned long)2 * 4000000 / 4000000);
   903  06B9  2EBA               	nop2	;2 cycle nop
   904                           
   905                           ;main.c: 177: for(int i = 7; i >= 0; i--){
   906  06BA  3007               	movlw	7
   907  06BB  1683               	bsf	3,5	;RP0=1, select bank1
   908  06BC  1303               	bcf	3,6	;RP1=0, select bank1
   909  06BD  00A3               	movwf	readSerial@i^(0+128)
   910  06BE  3000               	movlw	0
   911  06BF  00A4               	movwf	(readSerial@i^(0+128)+1)
   912  06C0  1BA4               	btfsc	(readSerial@i+1)^(0+128),7
   913  06C1  2EE7               	goto	l1163
   914  06C2                     l1149:	
   915                           
   916                           ;main.c: 178: valueADC |= RA2 << i;
   917  06C2  3000               	movlw	0
   918  06C3  1283               	bcf	3,5	;RP0=0, select bank0
   919  06C4  1303               	bcf	3,6	;RP1=0, select bank0
   920  06C5  1905               	btfsc	5,2	;volatile
   921  06C6  3001               	movlw	1
   922  06C7  1683               	bsf	3,5	;RP0=1, select bank1
   923  06C8  1303               	bcf	3,6	;RP1=0, select bank1
   924  06C9  00A0               	movwf	??_readSerial^(0+128)
   925  06CA  0A23               	incf	readSerial@i^(0+128),w
   926  06CB  2ECE               	goto	u1294
   927  06CC                     u1295:	
   928  06CC  1003               	clrc
   929  06CD  0DA0               	rlf	??_readSerial^(0+128),f
   930  06CE                     u1294:	
   931  06CE  3EFF               	addlw	-1
   932  06CF  1D03               	skipz
   933  06D0  2ECC               	goto	u1295
   934  06D1  0820               	movf	??_readSerial^(0+128),w
   935  06D2  00A1               	movwf	(??_readSerial+1)^(0+128)
   936  06D3  0821               	movf	(??_readSerial+1)^(0+128),w
   937  06D4  04A2               	iorwf	readSerial@valueADC^(0+128),f
   938                           
   939                           ;main.c: 179: RA1 = 1;
   940  06D5  1283               	bcf	3,5	;RP0=0, select bank0
   941  06D6  1303               	bcf	3,6	;RP1=0, select bank0
   942  06D7  1485               	bsf	5,1	;volatile
   943                           
   944                           ;main.c: 180: _delay((unsigned long)1 * 4000000 / 4000000);
   945  06D8  0000               	nop
   946                           
   947                           ;main.c: 181: RA1 = 0;
   948  06D9  1283               	bcf	3,5	;RP0=0, select bank0
   949  06DA  1303               	bcf	3,6	;RP1=0, select bank0
   950  06DB  1085               	bcf	5,1	;volatile
   951                           
   952                           ;main.c: 182: _delay((unsigned long)1 * 4000000 / 4000000);
   953  06DC  0000               	nop
   954  06DD  30FF               	movlw	255
   955  06DE  1683               	bsf	3,5	;RP0=1, select bank1
   956  06DF  1303               	bcf	3,6	;RP1=0, select bank1
   957  06E0  07A3               	addwf	readSerial@i^(0+128),f
   958  06E1  1803               	skipnc
   959  06E2  0AA4               	incf	(readSerial@i+1)^(0+128),f
   960  06E3  30FF               	movlw	255
   961  06E4  07A4               	addwf	(readSerial@i+1)^(0+128),f
   962  06E5  1FA4               	btfss	(readSerial@i+1)^(0+128),7
   963  06E6  2EC2               	goto	l1149
   964  06E7                     l1163:	
   965                           
   966                           ;main.c: 183: }
   967                           ;main.c: 185: return valueADC;
   968  06E7  0822               	movf	readSerial@valueADC^(0+128),w
   969  06E8  0008               	return
   970  06E9                     __end_of_readSerial:	
   971                           
   972                           	psect	text4
   973  076B                     __ptext4:	
   974 ;; *************** function ___lbtoft *****************
   975 ;; Defined at:
   976 ;;		line 27 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\lbtoft.c"
   977 ;; Parameters:    Size  Location     Type
   978 ;;  c               1    wreg     unsigned char 
   979 ;; Auto vars:     Size  Location     Type
   980 ;;  c               1   15[BANK1 ] unsigned char 
   981 ;; Return value:  Size  Location     Type
   982 ;;                  3    8[BANK1 ] float 
   983 ;; Registers used:
   984 ;;		wreg, status,2, status,0, pclath, cstack
   985 ;; Tracked objects:
   986 ;;		On entry : 0/0
   987 ;;		On exit  : 0/0
   988 ;;		Unchanged: 0/0
   989 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   990 ;;      Params:         0       0       3       0
   991 ;;      Locals:         0       0       1       0
   992 ;;      Temps:          0       0       4       0
   993 ;;      Totals:         0       0       8       0
   994 ;;Total ram usage:        8 bytes
   995 ;; Hardware stack levels used:    1
   996 ;; Hardware stack levels required when called:    4
   997 ;; This function calls:
   998 ;;		___ftpack
   999 ;; This function is called by:
  1000 ;;		_averageADC
  1001 ;; This function uses a non-reentrant model
  1002 ;;
  1003                           
  1004                           
  1005                           ;psect for function ___lbtoft
  1006  076B                     ___lbtoft:	
  1007                           
  1008                           ;incstack = 0
  1009                           ; Regs used in ___lbtoft: [wreg+status,2+status,0+pclath+cstack]
  1010                           ;___lbtoft@c stored from wreg
  1011  076B  1683               	bsf	3,5	;RP0=1, select bank1
  1012  076C  1303               	bcf	3,6	;RP1=0, select bank1
  1013  076D  00AF               	movwf	___lbtoft@c^(0+128)
  1014  076E  082F               	movf	___lbtoft@c^(0+128),w
  1015  076F  00AB               	movwf	??___lbtoft^(0+128)
  1016  0770  01AC               	clrf	(??___lbtoft^(0+128)+1)
  1017  0771  01AD               	clrf	(??___lbtoft^(0+128)+2)
  1018  0772  082B               	movf	??___lbtoft^(0+128),w
  1019  0773  00A0               	movwf	___ftpack@arg^(0+128)
  1020  0774  082C               	movf	(??___lbtoft+1)^(0+128),w
  1021  0775  00A1               	movwf	(___ftpack@arg+1)^(0+128)
  1022  0776  082D               	movf	(??___lbtoft+2)^(0+128),w
  1023  0777  00A2               	movwf	(___ftpack@arg+2)^(0+128)
  1024  0778  308E               	movlw	142
  1025  0779  00AE               	movwf	(??___lbtoft+3)^(0+128)
  1026  077A  082E               	movf	(??___lbtoft+3)^(0+128),w
  1027  077B  00A3               	movwf	___ftpack@exp^(0+128)
  1028  077C  01A4               	clrf	___ftpack@sign^(0+128)
  1029  077D  2497               	fcall	___ftpack
  1030  077E  1683               	bsf	3,5	;RP0=1, select bank1
  1031  077F  1303               	bcf	3,6	;RP1=0, select bank1
  1032  0780  0820               	movf	?___ftpack^(0+128),w
  1033  0781  00A8               	movwf	?___lbtoft^(0+128)
  1034  0782  0821               	movf	(?___ftpack+1)^(0+128),w
  1035  0783  00A9               	movwf	(?___lbtoft+1)^(0+128)
  1036  0784  0822               	movf	(?___ftpack+2)^(0+128),w
  1037  0785  00AA               	movwf	(?___lbtoft+2)^(0+128)
  1038  0786  0008               	return
  1039  0787                     __end_of___lbtoft:	
  1040                           
  1041                           	psect	text5
  1042  0353                     __ptext5:	
  1043 ;; *************** function ___ftdiv *****************
  1044 ;; Defined at:
  1045 ;;		line 56 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\ftdiv.c"
  1046 ;; Parameters:    Size  Location     Type
  1047 ;;  f2              3   16[BANK1 ] float 
  1048 ;;  f1              3   19[BANK1 ] float 
  1049 ;; Auto vars:     Size  Location     Type
  1050 ;;  f3              3   27[BANK1 ] float 
  1051 ;;  sign            1   31[BANK1 ] unsigned char 
  1052 ;;  exp             1   30[BANK1 ] unsigned char 
  1053 ;;  cntr            1   26[BANK1 ] unsigned char 
  1054 ;; Return value:  Size  Location     Type
  1055 ;;                  3   16[BANK1 ] float 
  1056 ;; Registers used:
  1057 ;;		wreg, status,2, status,0, pclath, cstack
  1058 ;; Tracked objects:
  1059 ;;		On entry : 0/0
  1060 ;;		On exit  : 0/0
  1061 ;;		Unchanged: 0/0
  1062 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1063 ;;      Params:         0       0       6       0
  1064 ;;      Locals:         0       0       6       0
  1065 ;;      Temps:          0       0       4       0
  1066 ;;      Totals:         0       0      16       0
  1067 ;;Total ram usage:       16 bytes
  1068 ;; Hardware stack levels used:    1
  1069 ;; Hardware stack levels required when called:    4
  1070 ;; This function calls:
  1071 ;;		___ftpack
  1072 ;; This function is called by:
  1073 ;;		_averageADC
  1074 ;;		_readADC
  1075 ;; This function uses a non-reentrant model
  1076 ;;
  1077                           
  1078                           
  1079                           ;psect for function ___ftdiv
  1080  0353                     ___ftdiv:	
  1081                           
  1082                           ;incstack = 0
  1083                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  1084  0353  1683               	bsf	3,5	;RP0=1, select bank1
  1085  0354  1303               	bcf	3,6	;RP1=0, select bank1
  1086  0355  0833               	movf	___ftdiv@f1^(0+128),w
  1087  0356  00B6               	movwf	??___ftdiv^(0+128)
  1088  0357  0834               	movf	(___ftdiv@f1+1)^(0+128),w
  1089  0358  00B7               	movwf	(??___ftdiv^(0+128)+1)
  1090  0359  0835               	movf	(___ftdiv@f1+2)^(0+128),w
  1091  035A  00B8               	movwf	(??___ftdiv^(0+128)+2)
  1092  035B  1003               	clrc
  1093  035C  0D37               	rlf	(??___ftdiv^(0+128)+1),w
  1094  035D  0D38               	rlf	(??___ftdiv^(0+128)+2),w
  1095  035E  00B9               	movwf	(??___ftdiv+3)^(0+128)
  1096  035F  0839               	movf	(??___ftdiv+3)^(0+128),w
  1097  0360  00BE               	movwf	___ftdiv@exp^(0+128)
  1098  0361  083E               	movf	___ftdiv@exp^(0+128),w
  1099  0362  1D03               	btfss	3,2
  1100  0363  2B6B               	goto	l1185
  1101  0364  3000               	movlw	0
  1102  0365  00B0               	movwf	?___ftdiv^(0+128)
  1103  0366  3000               	movlw	0
  1104  0367  00B1               	movwf	(?___ftdiv+1)^(0+128)
  1105  0368  3000               	movlw	0
  1106  0369  00B2               	movwf	(?___ftdiv+2)^(0+128)
  1107  036A  0008               	return
  1108  036B                     l1185:	
  1109  036B  0830               	movf	___ftdiv@f2^(0+128),w
  1110  036C  00B6               	movwf	??___ftdiv^(0+128)
  1111  036D  0831               	movf	(___ftdiv@f2+1)^(0+128),w
  1112  036E  00B7               	movwf	(??___ftdiv^(0+128)+1)
  1113  036F  0832               	movf	(___ftdiv@f2+2)^(0+128),w
  1114  0370  00B8               	movwf	(??___ftdiv^(0+128)+2)
  1115  0371  1003               	clrc
  1116  0372  0D37               	rlf	(??___ftdiv^(0+128)+1),w
  1117  0373  0D38               	rlf	(??___ftdiv^(0+128)+2),w
  1118  0374  00B9               	movwf	(??___ftdiv+3)^(0+128)
  1119  0375  0839               	movf	(??___ftdiv+3)^(0+128),w
  1120  0376  00BF               	movwf	___ftdiv@sign^(0+128)
  1121  0377  083F               	movf	___ftdiv@sign^(0+128),w
  1122  0378  1D03               	btfss	3,2
  1123  0379  2B81               	goto	l1191
  1124  037A  3000               	movlw	0
  1125  037B  00B0               	movwf	?___ftdiv^(0+128)
  1126  037C  3000               	movlw	0
  1127  037D  00B1               	movwf	(?___ftdiv+1)^(0+128)
  1128  037E  3000               	movlw	0
  1129  037F  00B2               	movwf	(?___ftdiv+2)^(0+128)
  1130  0380  0008               	return
  1131  0381                     l1191:	
  1132  0381  3000               	movlw	0
  1133  0382  00BB               	movwf	___ftdiv@f3^(0+128)
  1134  0383  3000               	movlw	0
  1135  0384  00BC               	movwf	(___ftdiv@f3+1)^(0+128)
  1136  0385  3000               	movlw	0
  1137  0386  00BD               	movwf	(___ftdiv@f3+2)^(0+128)
  1138  0387  3089               	movlw	137
  1139  0388  073F               	addwf	___ftdiv@sign^(0+128),w
  1140  0389  00B6               	movwf	??___ftdiv^(0+128)
  1141  038A  0836               	movf	??___ftdiv^(0+128),w
  1142  038B  02BE               	subwf	___ftdiv@exp^(0+128),f
  1143  038C  0833               	movf	___ftdiv@f1^(0+128),w
  1144  038D  00B6               	movwf	??___ftdiv^(0+128)
  1145  038E  0834               	movf	(___ftdiv@f1+1)^(0+128),w
  1146  038F  00B7               	movwf	(??___ftdiv^(0+128)+1)
  1147  0390  0835               	movf	(___ftdiv@f1+2)^(0+128),w
  1148  0391  00B8               	movwf	(??___ftdiv^(0+128)+2)
  1149  0392  3010               	movlw	16
  1150  0393                     u1345:	
  1151  0393  1003               	clrc
  1152  0394  0CB8               	rrf	(??___ftdiv^(0+128)+2),f
  1153  0395  0CB7               	rrf	(??___ftdiv^(0+128)+1),f
  1154  0396  0CB6               	rrf	??___ftdiv^(0+128),f
  1155  0397  3EFF               	addlw	-1
  1156  0398  1D03               	skipz
  1157  0399  2B93               	goto	u1345
  1158  039A  0836               	movf	??___ftdiv^(0+128),w
  1159  039B  00B9               	movwf	(??___ftdiv+3)^(0+128)
  1160  039C  0839               	movf	(??___ftdiv+3)^(0+128),w
  1161  039D  00BF               	movwf	___ftdiv@sign^(0+128)
  1162  039E  0830               	movf	___ftdiv@f2^(0+128),w
  1163  039F  00B6               	movwf	??___ftdiv^(0+128)
  1164  03A0  0831               	movf	(___ftdiv@f2+1)^(0+128),w
  1165  03A1  00B7               	movwf	(??___ftdiv^(0+128)+1)
  1166  03A2  0832               	movf	(___ftdiv@f2+2)^(0+128),w
  1167  03A3  00B8               	movwf	(??___ftdiv^(0+128)+2)
  1168  03A4  3010               	movlw	16
  1169  03A5                     u1355:	
  1170  03A5  1003               	clrc
  1171  03A6  0CB8               	rrf	(??___ftdiv^(0+128)+2),f
  1172  03A7  0CB7               	rrf	(??___ftdiv^(0+128)+1),f
  1173  03A8  0CB6               	rrf	??___ftdiv^(0+128),f
  1174  03A9  3EFF               	addlw	-1
  1175  03AA  1D03               	skipz
  1176  03AB  2BA5               	goto	u1355
  1177  03AC  0836               	movf	??___ftdiv^(0+128),w
  1178  03AD  00B9               	movwf	(??___ftdiv+3)^(0+128)
  1179  03AE  0839               	movf	(??___ftdiv+3)^(0+128),w
  1180  03AF  06BF               	xorwf	___ftdiv@sign^(0+128),f
  1181  03B0  3080               	movlw	128
  1182  03B1  00B6               	movwf	??___ftdiv^(0+128)
  1183  03B2  0836               	movf	??___ftdiv^(0+128),w
  1184  03B3  05BF               	andwf	___ftdiv@sign^(0+128),f
  1185  03B4  17B4               	bsf	(___ftdiv@f1^(0+128)+1),7
  1186  03B5  30FF               	movlw	255
  1187  03B6  05B3               	andwf	___ftdiv@f1^(0+128),f
  1188  03B7  30FF               	movlw	255
  1189  03B8  05B4               	andwf	(___ftdiv@f1+1)^(0+128),f
  1190  03B9  3000               	movlw	0
  1191  03BA  05B5               	andwf	(___ftdiv@f1+2)^(0+128),f
  1192  03BB  17B1               	bsf	(___ftdiv@f2^(0+128)+1),7
  1193  03BC  30FF               	movlw	255
  1194  03BD  05B0               	andwf	___ftdiv@f2^(0+128),f
  1195  03BE  30FF               	movlw	255
  1196  03BF  05B1               	andwf	(___ftdiv@f2+1)^(0+128),f
  1197  03C0  3000               	movlw	0
  1198  03C1  05B2               	andwf	(___ftdiv@f2+2)^(0+128),f
  1199  03C2  3018               	movlw	24
  1200  03C3  00B6               	movwf	??___ftdiv^(0+128)
  1201  03C4  0836               	movf	??___ftdiv^(0+128),w
  1202  03C5  00BA               	movwf	___ftdiv@cntr^(0+128)
  1203  03C6                     l1205:	
  1204  03C6  3001               	movlw	1
  1205  03C7                     u1365:	
  1206  03C7  1003               	clrc
  1207  03C8  0DBB               	rlf	___ftdiv@f3^(0+128),f
  1208  03C9  0DBC               	rlf	(___ftdiv@f3+1)^(0+128),f
  1209  03CA  0DBD               	rlf	(___ftdiv@f3+2)^(0+128),f
  1210  03CB  3EFF               	addlw	-1
  1211  03CC  1D03               	skipz
  1212  03CD  2BC7               	goto	u1365
  1213  03CE  0832               	movf	(___ftdiv@f2+2)^(0+128),w
  1214  03CF  0235               	subwf	(___ftdiv@f1+2)^(0+128),w
  1215  03D0  1D03               	skipz
  1216  03D1  2BD8               	goto	u1375
  1217  03D2  0831               	movf	(___ftdiv@f2+1)^(0+128),w
  1218  03D3  0234               	subwf	(___ftdiv@f1+1)^(0+128),w
  1219  03D4  1D03               	skipz
  1220  03D5  2BD8               	goto	u1375
  1221  03D6  0830               	movf	___ftdiv@f2^(0+128),w
  1222  03D7  0233               	subwf	___ftdiv@f1^(0+128),w
  1223  03D8                     u1375:	
  1224  03D8  1C03               	skipc
  1225  03D9  2BE5               	goto	l1213
  1226  03DA  0830               	movf	___ftdiv@f2^(0+128),w
  1227  03DB  02B3               	subwf	___ftdiv@f1^(0+128),f
  1228  03DC  0831               	movf	(___ftdiv@f2+1)^(0+128),w
  1229  03DD  1C03               	skipc
  1230  03DE  0F31               	incfsz	(___ftdiv@f2+1)^(0+128),w
  1231  03DF  02B4               	subwf	(___ftdiv@f1+1)^(0+128),f
  1232  03E0  0832               	movf	(___ftdiv@f2+2)^(0+128),w
  1233  03E1  1C03               	skipc
  1234  03E2  0A32               	incf	(___ftdiv@f2+2)^(0+128),w
  1235  03E3  02B5               	subwf	(___ftdiv@f1+2)^(0+128),f
  1236  03E4  143B               	bsf	___ftdiv@f3^(0+128),0
  1237  03E5                     l1213:	
  1238  03E5  3001               	movlw	1
  1239  03E6                     u1385:	
  1240  03E6  1003               	clrc
  1241  03E7  0DB3               	rlf	___ftdiv@f1^(0+128),f
  1242  03E8  0DB4               	rlf	(___ftdiv@f1+1)^(0+128),f
  1243  03E9  0DB5               	rlf	(___ftdiv@f1+2)^(0+128),f
  1244  03EA  3EFF               	addlw	-1
  1245  03EB  1D03               	skipz
  1246  03EC  2BE6               	goto	u1385
  1247  03ED  3001               	movlw	1
  1248  03EE  02BA               	subwf	___ftdiv@cntr^(0+128),f
  1249  03EF  1D03               	btfss	3,2
  1250  03F0  2BC6               	goto	l1205
  1251  03F1  083B               	movf	___ftdiv@f3^(0+128),w
  1252  03F2  00A0               	movwf	___ftpack@arg^(0+128)
  1253  03F3  083C               	movf	(___ftdiv@f3+1)^(0+128),w
  1254  03F4  00A1               	movwf	(___ftpack@arg+1)^(0+128)
  1255  03F5  083D               	movf	(___ftdiv@f3+2)^(0+128),w
  1256  03F6  00A2               	movwf	(___ftpack@arg+2)^(0+128)
  1257  03F7  083E               	movf	___ftdiv@exp^(0+128),w
  1258  03F8  00B6               	movwf	??___ftdiv^(0+128)
  1259  03F9  0836               	movf	??___ftdiv^(0+128),w
  1260  03FA  00A3               	movwf	___ftpack@exp^(0+128)
  1261  03FB  083F               	movf	___ftdiv@sign^(0+128),w
  1262  03FC  00B7               	movwf	(??___ftdiv+1)^(0+128)
  1263  03FD  0837               	movf	(??___ftdiv+1)^(0+128),w
  1264  03FE  00A4               	movwf	___ftpack@sign^(0+128)
  1265  03FF  2497               	fcall	___ftpack
  1266  0400  1683               	bsf	3,5	;RP0=1, select bank1
  1267  0401  1303               	bcf	3,6	;RP1=0, select bank1
  1268  0402  0820               	movf	?___ftpack^(0+128),w
  1269  0403  00B0               	movwf	?___ftdiv^(0+128)
  1270  0404  0821               	movf	(?___ftpack+1)^(0+128),w
  1271  0405  00B1               	movwf	(?___ftdiv+1)^(0+128)
  1272  0406  0822               	movf	(?___ftpack+2)^(0+128),w
  1273  0407  00B2               	movwf	(?___ftdiv+2)^(0+128)
  1274  0408  0008               	return
  1275  0409                     __end_of___ftdiv:	
  1276                           
  1277                           	psect	text6
  1278  0748                     __ptext6:	
  1279 ;; *************** function ___awtoft *****************
  1280 ;; Defined at:
  1281 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\awtoft.c"
  1282 ;; Parameters:    Size  Location     Type
  1283 ;;  c               2    8[BANK1 ] int 
  1284 ;; Auto vars:     Size  Location     Type
  1285 ;;  sign            1   13[BANK1 ] unsigned char 
  1286 ;; Return value:  Size  Location     Type
  1287 ;;                  3    8[BANK1 ] float 
  1288 ;; Registers used:
  1289 ;;		wreg, status,2, status,0, pclath, cstack
  1290 ;; Tracked objects:
  1291 ;;		On entry : 0/0
  1292 ;;		On exit  : 0/0
  1293 ;;		Unchanged: 0/0
  1294 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1295 ;;      Params:         0       0       3       0
  1296 ;;      Locals:         0       0       1       0
  1297 ;;      Temps:          0       0       2       0
  1298 ;;      Totals:         0       0       6       0
  1299 ;;Total ram usage:        6 bytes
  1300 ;; Hardware stack levels used:    1
  1301 ;; Hardware stack levels required when called:    4
  1302 ;; This function calls:
  1303 ;;		___ftpack
  1304 ;; This function is called by:
  1305 ;;		_averageADC
  1306 ;; This function uses a non-reentrant model
  1307 ;;
  1308                           
  1309                           
  1310                           ;psect for function ___awtoft
  1311  0748                     ___awtoft:	
  1312                           
  1313                           ;incstack = 0
  1314                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
  1315  0748  1683               	bsf	3,5	;RP0=1, select bank1
  1316  0749  1303               	bcf	3,6	;RP1=0, select bank1
  1317  074A  01AD               	clrf	___awtoft@sign^(0+128)
  1318  074B  1FA9               	btfss	(___awtoft@c+1)^(0+128),7
  1319  074C  2F54               	goto	l1175
  1320  074D  09A8               	comf	___awtoft@c^(0+128),f
  1321  074E  09A9               	comf	(___awtoft@c+1)^(0+128),f
  1322  074F  0AA8               	incf	___awtoft@c^(0+128),f
  1323  0750  1903               	skipnz
  1324  0751  0AA9               	incf	(___awtoft@c+1)^(0+128),f
  1325  0752  01AD               	clrf	___awtoft@sign^(0+128)
  1326  0753  0AAD               	incf	___awtoft@sign^(0+128),f
  1327  0754                     l1175:	
  1328  0754  0828               	movf	___awtoft@c^(0+128),w
  1329  0755  00A0               	movwf	___ftpack@arg^(0+128)
  1330  0756  0829               	movf	(___awtoft@c+1)^(0+128),w
  1331  0757  00A1               	movwf	(___ftpack@arg+1)^(0+128)
  1332  0758  01A2               	clrf	(___ftpack@arg+2)^(0+128)
  1333  0759  308E               	movlw	142
  1334  075A  00AB               	movwf	??___awtoft^(0+128)
  1335  075B  082B               	movf	??___awtoft^(0+128),w
  1336  075C  00A3               	movwf	___ftpack@exp^(0+128)
  1337  075D  082D               	movf	___awtoft@sign^(0+128),w
  1338  075E  00AC               	movwf	(??___awtoft+1)^(0+128)
  1339  075F  082C               	movf	(??___awtoft+1)^(0+128),w
  1340  0760  00A4               	movwf	___ftpack@sign^(0+128)
  1341  0761  2497               	fcall	___ftpack
  1342  0762  1683               	bsf	3,5	;RP0=1, select bank1
  1343  0763  1303               	bcf	3,6	;RP1=0, select bank1
  1344  0764  0820               	movf	?___ftpack^(0+128),w
  1345  0765  00A8               	movwf	?___awtoft^(0+128)
  1346  0766  0821               	movf	(?___ftpack+1)^(0+128),w
  1347  0767  00A9               	movwf	(?___awtoft+1)^(0+128)
  1348  0768  0822               	movf	(?___ftpack+2)^(0+128),w
  1349  0769  00AA               	movwf	(?___awtoft+2)^(0+128)
  1350  076A  0008               	return
  1351  076B                     __end_of___awtoft:	
  1352                           
  1353                           	psect	text7
  1354  01B3                     __ptext7:	
  1355 ;; *************** function ___ftmul *****************
  1356 ;; Defined at:
  1357 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\ftmul.c"
  1358 ;; Parameters:    Size  Location     Type
  1359 ;;  f1              3   41[BANK1 ] float 
  1360 ;;  f2              3   44[BANK1 ] float 
  1361 ;; Auto vars:     Size  Location     Type
  1362 ;;  f3_as_produc    3   52[BANK1 ] unsigned um
  1363 ;;  sign            1   56[BANK1 ] unsigned char 
  1364 ;;  cntr            1   55[BANK1 ] unsigned char 
  1365 ;;  exp             1   51[BANK1 ] unsigned char 
  1366 ;; Return value:  Size  Location     Type
  1367 ;;                  3   41[BANK1 ] float 
  1368 ;; Registers used:
  1369 ;;		wreg, status,2, status,0, pclath, cstack
  1370 ;; Tracked objects:
  1371 ;;		On entry : 0/0
  1372 ;;		On exit  : 0/0
  1373 ;;		Unchanged: 0/0
  1374 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1375 ;;      Params:         0       0       6       0
  1376 ;;      Locals:         0       0       6       0
  1377 ;;      Temps:          0       0       4       0
  1378 ;;      Totals:         0       0      16       0
  1379 ;;Total ram usage:       16 bytes
  1380 ;; Hardware stack levels used:    1
  1381 ;; Hardware stack levels required when called:    4
  1382 ;; This function calls:
  1383 ;;		___ftpack
  1384 ;; This function is called by:
  1385 ;;		_readADC
  1386 ;; This function uses a non-reentrant model
  1387 ;;
  1388                           
  1389                           
  1390                           ;psect for function ___ftmul
  1391  01B3                     ___ftmul:	
  1392                           
  1393                           ;incstack = 0
  1394                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  1395  01B3  1683               	bsf	3,5	;RP0=1, select bank1
  1396  01B4  1303               	bcf	3,6	;RP1=0, select bank1
  1397  01B5  0849               	movf	___ftmul@f1^(0+128),w
  1398  01B6  00CF               	movwf	??___ftmul^(0+128)
  1399  01B7  084A               	movf	(___ftmul@f1+1)^(0+128),w
  1400  01B8  00D0               	movwf	(??___ftmul^(0+128)+1)
  1401  01B9  084B               	movf	(___ftmul@f1+2)^(0+128),w
  1402  01BA  00D1               	movwf	(??___ftmul^(0+128)+2)
  1403  01BB  1003               	clrc
  1404  01BC  0D50               	rlf	(??___ftmul^(0+128)+1),w
  1405  01BD  0D51               	rlf	(??___ftmul^(0+128)+2),w
  1406  01BE  00D2               	movwf	(??___ftmul+3)^(0+128)
  1407  01BF  0852               	movf	(??___ftmul+3)^(0+128),w
  1408  01C0  00D3               	movwf	___ftmul@exp^(0+128)
  1409  01C1  0853               	movf	___ftmul@exp^(0+128),w
  1410  01C2  1D03               	btfss	3,2
  1411  01C3  29CB               	goto	l1243
  1412  01C4  3000               	movlw	0
  1413  01C5  00C9               	movwf	?___ftmul^(0+128)
  1414  01C6  3000               	movlw	0
  1415  01C7  00CA               	movwf	(?___ftmul+1)^(0+128)
  1416  01C8  3000               	movlw	0
  1417  01C9  00CB               	movwf	(?___ftmul+2)^(0+128)
  1418  01CA  0008               	return
  1419  01CB                     l1243:	
  1420  01CB  084C               	movf	___ftmul@f2^(0+128),w
  1421  01CC  00CF               	movwf	??___ftmul^(0+128)
  1422  01CD  084D               	movf	(___ftmul@f2+1)^(0+128),w
  1423  01CE  00D0               	movwf	(??___ftmul^(0+128)+1)
  1424  01CF  084E               	movf	(___ftmul@f2+2)^(0+128),w
  1425  01D0  00D1               	movwf	(??___ftmul^(0+128)+2)
  1426  01D1  1003               	clrc
  1427  01D2  0D50               	rlf	(??___ftmul^(0+128)+1),w
  1428  01D3  0D51               	rlf	(??___ftmul^(0+128)+2),w
  1429  01D4  00D2               	movwf	(??___ftmul+3)^(0+128)
  1430  01D5  0852               	movf	(??___ftmul+3)^(0+128),w
  1431  01D6  00D8               	movwf	___ftmul@sign^(0+128)
  1432  01D7  0858               	movf	___ftmul@sign^(0+128),w
  1433  01D8  1D03               	btfss	3,2
  1434  01D9  29E1               	goto	l1249
  1435  01DA  3000               	movlw	0
  1436  01DB  00C9               	movwf	?___ftmul^(0+128)
  1437  01DC  3000               	movlw	0
  1438  01DD  00CA               	movwf	(?___ftmul+1)^(0+128)
  1439  01DE  3000               	movlw	0
  1440  01DF  00CB               	movwf	(?___ftmul+2)^(0+128)
  1441  01E0  0008               	return
  1442  01E1                     l1249:	
  1443  01E1  0858               	movf	___ftmul@sign^(0+128),w
  1444  01E2  3E7B               	addlw	123
  1445  01E3  00CF               	movwf	??___ftmul^(0+128)
  1446  01E4  084F               	movf	??___ftmul^(0+128),w
  1447  01E5  07D3               	addwf	___ftmul@exp^(0+128),f
  1448  01E6  0849               	movf	___ftmul@f1^(0+128),w
  1449  01E7  00CF               	movwf	??___ftmul^(0+128)
  1450  01E8  084A               	movf	(___ftmul@f1+1)^(0+128),w
  1451  01E9  00D0               	movwf	(??___ftmul^(0+128)+1)
  1452  01EA  084B               	movf	(___ftmul@f1+2)^(0+128),w
  1453  01EB  00D1               	movwf	(??___ftmul^(0+128)+2)
  1454  01EC  3010               	movlw	16
  1455  01ED                     u1435:	
  1456  01ED  1003               	clrc
  1457  01EE  0CD1               	rrf	(??___ftmul^(0+128)+2),f
  1458  01EF  0CD0               	rrf	(??___ftmul^(0+128)+1),f
  1459  01F0  0CCF               	rrf	??___ftmul^(0+128),f
  1460  01F1  3EFF               	addlw	-1
  1461  01F2  1D03               	skipz
  1462  01F3  29ED               	goto	u1435
  1463  01F4  084F               	movf	??___ftmul^(0+128),w
  1464  01F5  00D2               	movwf	(??___ftmul+3)^(0+128)
  1465  01F6  0852               	movf	(??___ftmul+3)^(0+128),w
  1466  01F7  00D8               	movwf	___ftmul@sign^(0+128)
  1467  01F8  084C               	movf	___ftmul@f2^(0+128),w
  1468  01F9  00CF               	movwf	??___ftmul^(0+128)
  1469  01FA  084D               	movf	(___ftmul@f2+1)^(0+128),w
  1470  01FB  00D0               	movwf	(??___ftmul^(0+128)+1)
  1471  01FC  084E               	movf	(___ftmul@f2+2)^(0+128),w
  1472  01FD  00D1               	movwf	(??___ftmul^(0+128)+2)
  1473  01FE  3010               	movlw	16
  1474  01FF                     u1445:	
  1475  01FF  1003               	clrc
  1476  0200  0CD1               	rrf	(??___ftmul^(0+128)+2),f
  1477  0201  0CD0               	rrf	(??___ftmul^(0+128)+1),f
  1478  0202  0CCF               	rrf	??___ftmul^(0+128),f
  1479  0203  3EFF               	addlw	-1
  1480  0204  1D03               	skipz
  1481  0205  29FF               	goto	u1445
  1482  0206  084F               	movf	??___ftmul^(0+128),w
  1483  0207  00D2               	movwf	(??___ftmul+3)^(0+128)
  1484  0208  0852               	movf	(??___ftmul+3)^(0+128),w
  1485  0209  06D8               	xorwf	___ftmul@sign^(0+128),f
  1486  020A  3080               	movlw	128
  1487  020B  00CF               	movwf	??___ftmul^(0+128)
  1488  020C  084F               	movf	??___ftmul^(0+128),w
  1489  020D  05D8               	andwf	___ftmul@sign^(0+128),f
  1490  020E  17CA               	bsf	(___ftmul@f1^(0+128)+1),7
  1491  020F  17CD               	bsf	(___ftmul@f2^(0+128)+1),7
  1492  0210  30FF               	movlw	255
  1493  0211  05CC               	andwf	___ftmul@f2^(0+128),f
  1494  0212  30FF               	movlw	255
  1495  0213  05CD               	andwf	(___ftmul@f2+1)^(0+128),f
  1496  0214  3000               	movlw	0
  1497  0215  05CE               	andwf	(___ftmul@f2+2)^(0+128),f
  1498  0216  3000               	movlw	0
  1499  0217  00D4               	movwf	___ftmul@f3_as_product^(0+128)
  1500  0218  3000               	movlw	0
  1501  0219  00D5               	movwf	(___ftmul@f3_as_product+1)^(0+128)
  1502  021A  3000               	movlw	0
  1503  021B  00D6               	movwf	(___ftmul@f3_as_product+2)^(0+128)
  1504  021C  3007               	movlw	7
  1505  021D  00CF               	movwf	??___ftmul^(0+128)
  1506  021E  084F               	movf	??___ftmul^(0+128),w
  1507  021F  00D7               	movwf	___ftmul@cntr^(0+128)
  1508  0220                     l1261:	
  1509  0220  1C49               	btfss	___ftmul@f1^(0+128),0
  1510  0221  2A30               	goto	l1265
  1511  0222  084C               	movf	___ftmul@f2^(0+128),w
  1512  0223  07D4               	addwf	___ftmul@f3_as_product^(0+128),f
  1513  0224  084D               	movf	(___ftmul@f2+1)^(0+128),w
  1514  0225  1103               	clrz
  1515  0226  1803               	skipnc
  1516  0227  0A4D               	incf	(___ftmul@f2+1)^(0+128),w
  1517  0228  1D03               	btfss	3,2
  1518  0229  07D5               	addwf	(___ftmul@f3_as_product+1)^(0+128),f
  1519  022A  084E               	movf	(___ftmul@f2+2)^(0+128),w
  1520  022B  1103               	clrz
  1521  022C  1803               	skipnc
  1522  022D  0A4E               	incf	(___ftmul@f2+2)^(0+128),w
  1523  022E  1D03               	btfss	3,2
  1524  022F  07D6               	addwf	(___ftmul@f3_as_product+2)^(0+128),f
  1525  0230                     l1265:	
  1526  0230  3001               	movlw	1
  1527  0231                     u1475:	
  1528  0231  1003               	clrc
  1529  0232  0CCB               	rrf	(___ftmul@f1+2)^(0+128),f
  1530  0233  0CCA               	rrf	(___ftmul@f1+1)^(0+128),f
  1531  0234  0CC9               	rrf	___ftmul@f1^(0+128),f
  1532  0235  3EFF               	addlw	-1
  1533  0236  1D03               	skipz
  1534  0237  2A31               	goto	u1475
  1535  0238  3001               	movlw	1
  1536  0239                     u1485:	
  1537  0239  1003               	clrc
  1538  023A  0DCC               	rlf	___ftmul@f2^(0+128),f
  1539  023B  0DCD               	rlf	(___ftmul@f2+1)^(0+128),f
  1540  023C  0DCE               	rlf	(___ftmul@f2+2)^(0+128),f
  1541  023D  3EFF               	addlw	-1
  1542  023E  1D03               	skipz
  1543  023F  2A39               	goto	u1485
  1544  0240  3001               	movlw	1
  1545  0241  02D7               	subwf	___ftmul@cntr^(0+128),f
  1546  0242  1D03               	btfss	3,2
  1547  0243  2A20               	goto	l1261
  1548  0244  3009               	movlw	9
  1549  0245  00CF               	movwf	??___ftmul^(0+128)
  1550  0246  084F               	movf	??___ftmul^(0+128),w
  1551  0247  00D7               	movwf	___ftmul@cntr^(0+128)
  1552  0248                     l1273:	
  1553  0248  1C49               	btfss	___ftmul@f1^(0+128),0
  1554  0249  2A58               	goto	l1277
  1555  024A  084C               	movf	___ftmul@f2^(0+128),w
  1556  024B  07D4               	addwf	___ftmul@f3_as_product^(0+128),f
  1557  024C  084D               	movf	(___ftmul@f2+1)^(0+128),w
  1558  024D  1103               	clrz
  1559  024E  1803               	skipnc
  1560  024F  0A4D               	incf	(___ftmul@f2+1)^(0+128),w
  1561  0250  1D03               	btfss	3,2
  1562  0251  07D5               	addwf	(___ftmul@f3_as_product+1)^(0+128),f
  1563  0252  084E               	movf	(___ftmul@f2+2)^(0+128),w
  1564  0253  1103               	clrz
  1565  0254  1803               	skipnc
  1566  0255  0A4E               	incf	(___ftmul@f2+2)^(0+128),w
  1567  0256  1D03               	btfss	3,2
  1568  0257  07D6               	addwf	(___ftmul@f3_as_product+2)^(0+128),f
  1569  0258                     l1277:	
  1570  0258  3001               	movlw	1
  1571  0259                     u1525:	
  1572  0259  1003               	clrc
  1573  025A  0CCB               	rrf	(___ftmul@f1+2)^(0+128),f
  1574  025B  0CCA               	rrf	(___ftmul@f1+1)^(0+128),f
  1575  025C  0CC9               	rrf	___ftmul@f1^(0+128),f
  1576  025D  3EFF               	addlw	-1
  1577  025E  1D03               	skipz
  1578  025F  2A59               	goto	u1525
  1579  0260  3001               	movlw	1
  1580  0261                     u1535:	
  1581  0261  1003               	clrc
  1582  0262  0CD6               	rrf	(___ftmul@f3_as_product+2)^(0+128),f
  1583  0263  0CD5               	rrf	(___ftmul@f3_as_product+1)^(0+128),f
  1584  0264  0CD4               	rrf	___ftmul@f3_as_product^(0+128),f
  1585  0265  3EFF               	addlw	-1
  1586  0266  1D03               	skipz
  1587  0267  2A61               	goto	u1535
  1588  0268  3001               	movlw	1
  1589  0269  02D7               	subwf	___ftmul@cntr^(0+128),f
  1590  026A  1D03               	btfss	3,2
  1591  026B  2A48               	goto	l1273
  1592  026C  0854               	movf	___ftmul@f3_as_product^(0+128),w
  1593  026D  00A0               	movwf	___ftpack@arg^(0+128)
  1594  026E  0855               	movf	(___ftmul@f3_as_product+1)^(0+128),w
  1595  026F  00A1               	movwf	(___ftpack@arg+1)^(0+128)
  1596  0270  0856               	movf	(___ftmul@f3_as_product+2)^(0+128),w
  1597  0271  00A2               	movwf	(___ftpack@arg+2)^(0+128)
  1598  0272  0853               	movf	___ftmul@exp^(0+128),w
  1599  0273  00CF               	movwf	??___ftmul^(0+128)
  1600  0274  084F               	movf	??___ftmul^(0+128),w
  1601  0275  00A3               	movwf	___ftpack@exp^(0+128)
  1602  0276  0858               	movf	___ftmul@sign^(0+128),w
  1603  0277  00D0               	movwf	(??___ftmul+1)^(0+128)
  1604  0278  0850               	movf	(??___ftmul+1)^(0+128),w
  1605  0279  00A4               	movwf	___ftpack@sign^(0+128)
  1606  027A  2497               	fcall	___ftpack
  1607  027B  1683               	bsf	3,5	;RP0=1, select bank1
  1608  027C  1303               	bcf	3,6	;RP1=0, select bank1
  1609  027D  0820               	movf	?___ftpack^(0+128),w
  1610  027E  00C9               	movwf	?___ftmul^(0+128)
  1611  027F  0821               	movf	(?___ftpack+1)^(0+128),w
  1612  0280  00CA               	movwf	(?___ftmul+1)^(0+128)
  1613  0281  0822               	movf	(?___ftpack+2)^(0+128),w
  1614  0282  00CB               	movwf	(?___ftmul+2)^(0+128)
  1615  0283  0008               	return
  1616  0284                     __end_of___ftmul:	
  1617                           
  1618                           	psect	text8
  1619  0497                     __ptext8:	
  1620 ;; *************** function ___ftpack *****************
  1621 ;; Defined at:
  1622 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\float.c"
  1623 ;; Parameters:    Size  Location     Type
  1624 ;;  arg             3    0[BANK1 ] unsigned um
  1625 ;;  exp             1    3[BANK1 ] unsigned char 
  1626 ;;  sign            1    4[BANK1 ] unsigned char 
  1627 ;; Auto vars:     Size  Location     Type
  1628 ;;		None
  1629 ;; Return value:  Size  Location     Type
  1630 ;;                  3    0[BANK1 ] float 
  1631 ;; Registers used:
  1632 ;;		wreg, status,2, status,0
  1633 ;; Tracked objects:
  1634 ;;		On entry : 0/0
  1635 ;;		On exit  : 0/0
  1636 ;;		Unchanged: 0/0
  1637 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1638 ;;      Params:         0       0       5       0
  1639 ;;      Locals:         0       0       0       0
  1640 ;;      Temps:          0       0       3       0
  1641 ;;      Totals:         0       0       8       0
  1642 ;;Total ram usage:        8 bytes
  1643 ;; Hardware stack levels used:    1
  1644 ;; Hardware stack levels required when called:    3
  1645 ;; This function calls:
  1646 ;;		Nothing
  1647 ;; This function is called by:
  1648 ;;		___awtoft
  1649 ;;		___ftdiv
  1650 ;;		___ftmul
  1651 ;;		___lbtoft
  1652 ;; This function uses a non-reentrant model
  1653 ;;
  1654                           
  1655                           
  1656                           ;psect for function ___ftpack
  1657  0497                     ___ftpack:	
  1658                           
  1659                           ;incstack = 0
  1660                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  1661  0497  1683               	bsf	3,5	;RP0=1, select bank1
  1662  0498  1303               	bcf	3,6	;RP1=0, select bank1
  1663  0499  0823               	movf	___ftpack@exp^(0+128),w
  1664  049A  1903               	btfsc	3,2
  1665  049B  2CA1               	goto	l1105
  1666  049C  0822               	movf	(___ftpack@arg+2)^(0+128),w
  1667  049D  0421               	iorwf	(___ftpack@arg+1)^(0+128),w
  1668  049E  0420               	iorwf	___ftpack@arg^(0+128),w
  1669  049F  1D03               	skipz
  1670  04A0  2CB4               	goto	l1111
  1671  04A1                     l1105:	
  1672  04A1  3000               	movlw	0
  1673  04A2  00A0               	movwf	?___ftpack^(0+128)
  1674  04A3  3000               	movlw	0
  1675  04A4  00A1               	movwf	(?___ftpack+1)^(0+128)
  1676  04A5  3000               	movlw	0
  1677  04A6  00A2               	movwf	(?___ftpack+2)^(0+128)
  1678  04A7  0008               	return
  1679  04A8                     l1109:	
  1680  04A8  3001               	movlw	1
  1681  04A9  00A5               	movwf	??___ftpack^(0+128)
  1682  04AA  0825               	movf	??___ftpack^(0+128),w
  1683  04AB  07A3               	addwf	___ftpack@exp^(0+128),f
  1684  04AC  3001               	movlw	1
  1685  04AD                     u1185:	
  1686  04AD  1003               	clrc
  1687  04AE  0CA2               	rrf	(___ftpack@arg+2)^(0+128),f
  1688  04AF  0CA1               	rrf	(___ftpack@arg+1)^(0+128),f
  1689  04B0  0CA0               	rrf	___ftpack@arg^(0+128),f
  1690  04B1  3EFF               	addlw	-1
  1691  04B2  1D03               	skipz
  1692  04B3  2CAD               	goto	u1185
  1693  04B4                     l1111:	
  1694  04B4  30FE               	movlw	254
  1695  04B5  0522               	andwf	(___ftpack@arg+2)^(0+128),w
  1696  04B6  1903               	btfsc	3,2
  1697  04B7  2CCF               	goto	l326
  1698  04B8  2CA8               	goto	l1109
  1699  04B9                     l1113:	
  1700  04B9  3001               	movlw	1
  1701  04BA  00A5               	movwf	??___ftpack^(0+128)
  1702  04BB  0825               	movf	??___ftpack^(0+128),w
  1703  04BC  07A3               	addwf	___ftpack@exp^(0+128),f
  1704  04BD  3001               	movlw	1
  1705  04BE  07A0               	addwf	___ftpack@arg^(0+128),f
  1706  04BF  3000               	movlw	0
  1707  04C0  1803               	skipnc
  1708  04C1  3001               	movlw	1
  1709  04C2  07A1               	addwf	(___ftpack@arg+1)^(0+128),f
  1710  04C3  3000               	movlw	0
  1711  04C4  1803               	skipnc
  1712  04C5  3001               	movlw	1
  1713  04C6  07A2               	addwf	(___ftpack@arg+2)^(0+128),f
  1714  04C7  3001               	movlw	1
  1715  04C8                     u1205:	
  1716  04C8  1003               	clrc
  1717  04C9  0CA2               	rrf	(___ftpack@arg+2)^(0+128),f
  1718  04CA  0CA1               	rrf	(___ftpack@arg+1)^(0+128),f
  1719  04CB  0CA0               	rrf	___ftpack@arg^(0+128),f
  1720  04CC  3EFF               	addlw	-1
  1721  04CD  1D03               	skipz
  1722  04CE  2CC8               	goto	u1205
  1723  04CF                     l326:	
  1724  04CF  30FF               	movlw	255
  1725  04D0  0522               	andwf	(___ftpack@arg+2)^(0+128),w
  1726  04D1  1903               	btfsc	3,2
  1727  04D2  2CDE               	goto	l1121
  1728  04D3  2CB9               	goto	l1113
  1729  04D4                     l1119:	
  1730  04D4  3001               	movlw	1
  1731  04D5  02A3               	subwf	___ftpack@exp^(0+128),f
  1732  04D6  3001               	movlw	1
  1733  04D7                     u1225:	
  1734  04D7  1003               	clrc
  1735  04D8  0DA0               	rlf	___ftpack@arg^(0+128),f
  1736  04D9  0DA1               	rlf	(___ftpack@arg+1)^(0+128),f
  1737  04DA  0DA2               	rlf	(___ftpack@arg+2)^(0+128),f
  1738  04DB  3EFF               	addlw	-1
  1739  04DC  1D03               	skipz
  1740  04DD  2CD7               	goto	u1225
  1741  04DE                     l1121:	
  1742  04DE  1BA1               	btfsc	(___ftpack@arg+1)^(0+128),7
  1743  04DF  2CE4               	goto	l333
  1744  04E0  3002               	movlw	2
  1745  04E1  0223               	subwf	___ftpack@exp^(0+128),w
  1746  04E2  1803               	skipnc
  1747  04E3  2CD4               	goto	l1119
  1748  04E4                     l333:	
  1749  04E4  1823               	btfsc	___ftpack@exp^(0+128),0
  1750  04E5  2CEC               	goto	l334
  1751  04E6  30FF               	movlw	255
  1752  04E7  05A0               	andwf	___ftpack@arg^(0+128),f
  1753  04E8  307F               	movlw	127
  1754  04E9  05A1               	andwf	(___ftpack@arg+1)^(0+128),f
  1755  04EA  30FF               	movlw	255
  1756  04EB  05A2               	andwf	(___ftpack@arg+2)^(0+128),f
  1757  04EC                     l334:	
  1758  04EC  1003               	clrc
  1759  04ED  0CA3               	rrf	___ftpack@exp^(0+128),f
  1760  04EE  0823               	movf	___ftpack@exp^(0+128),w
  1761  04EF  00A5               	movwf	??___ftpack^(0+128)
  1762  04F0  01A6               	clrf	(??___ftpack^(0+128)+1)
  1763  04F1  01A7               	clrf	(??___ftpack^(0+128)+2)
  1764  04F2  3010               	movlw	16
  1765  04F3                     u1265:	
  1766  04F3  1003               	clrc
  1767  04F4  0DA5               	rlf	??___ftpack^(0+128),f
  1768  04F5  0DA6               	rlf	(??___ftpack^(0+128)+1),f
  1769  04F6  0DA7               	rlf	(??___ftpack^(0+128)+2),f
  1770  04F7  3EFF               	addlw	-1
  1771  04F8  1D03               	skipz
  1772  04F9  2CF3               	goto	u1265
  1773  04FA  0825               	movf	??___ftpack^(0+128),w
  1774  04FB  04A0               	iorwf	___ftpack@arg^(0+128),f
  1775  04FC  0826               	movf	(??___ftpack+1)^(0+128),w
  1776  04FD  04A1               	iorwf	(___ftpack@arg+1)^(0+128),f
  1777  04FE  0827               	movf	(??___ftpack+2)^(0+128),w
  1778  04FF  04A2               	iorwf	(___ftpack@arg+2)^(0+128),f
  1779  0500  0824               	movf	___ftpack@sign^(0+128),w
  1780  0501  1903               	btfsc	3,2
  1781  0502  0008               	return
  1782  0503  17A2               	bsf	(___ftpack@arg^(0+128)+2),7
  1783  0504  0008               	return
  1784  0505                     __end_of___ftpack:	
  1785                           
  1786                           	psect	text9
  1787  0045                     __ptext9:	
  1788 ;; *************** function _Interrupt *****************
  1789 ;; Defined at:
  1790 ;;		line 53 in file "main.c"
  1791 ;; Parameters:    Size  Location     Type
  1792 ;;		None
  1793 ;; Auto vars:     Size  Location     Type
  1794 ;;  segments       20   32[BANK0 ] int [10]
  1795 ;;  number          2   52[BANK0 ] int 
  1796 ;; Return value:  Size  Location     Type
  1797 ;;                  1    wreg      void 
  1798 ;; Registers used:
  1799 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1800 ;; Tracked objects:
  1801 ;;		On entry : 0/0
  1802 ;;		On exit  : 0/0
  1803 ;;		Unchanged: 0/0
  1804 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1805 ;;      Params:         0       0       0       0
  1806 ;;      Locals:         0      22       0       0
  1807 ;;      Temps:          0       8       0       0
  1808 ;;      Totals:         0      30       0       0
  1809 ;;Total ram usage:       30 bytes
  1810 ;; Hardware stack levels used:    1
  1811 ;; Hardware stack levels required when called:    2
  1812 ;; This function calls:
  1813 ;;		___awdiv
  1814 ;;		___awmod
  1815 ;;		___ftge
  1816 ;;		___fttol
  1817 ;;		i1___ftmul
  1818 ;; This function is called by:
  1819 ;;		Interrupt level 1
  1820 ;; This function uses a non-reentrant model
  1821 ;;
  1822                           
  1823                           
  1824                           ;psect for function _Interrupt
  1825  0045                     _Interrupt:	
  1826                           
  1827                           ;main.c: 54: int number;
  1828                           ;main.c: 55: int segments[10] = {
  1829                           ;main.c: 56: 0x3f,
  1830                           ;main.c: 57: 0x06,
  1831                           ;main.c: 58: 0x5b,
  1832                           ;main.c: 59: 0x4f,
  1833                           ;main.c: 60: 0x66,
  1834                           ;main.c: 61: 0x6d,
  1835                           ;main.c: 62: 0x7d,
  1836                           ;main.c: 63: 0x07,
  1837                           ;main.c: 64: 0x7f,
  1838                           ;main.c: 65: 0x67
  1839                           ;main.c: 66: };
  1840  0045  3040               	movlw	Interrupt@segments& (0+255)
  1841  0046  0084               	movwf	4
  1842  0047  3020               	movlw	low Interrupt@F619
  1843  0048  00B8               	movwf	??_Interrupt
  1844  0049  0804               	movf	4,w
  1845  004A  00B9               	movwf	??_Interrupt+1
  1846  004B  3014               	movlw	20
  1847  004C  00BA               	movwf	??_Interrupt+2
  1848  004D                     u215_20:	
  1849  004D  0838               	movf	??_Interrupt,w
  1850  004E  0084               	movwf	4
  1851  004F  1783               	bsf	3,7	;select IRP bank2
  1852  0050  0800               	movf	0,w
  1853  0051  00BB               	movwf	??_Interrupt+3
  1854  0052  0AB8               	incf	??_Interrupt,f
  1855  0053  0839               	movf	??_Interrupt+1,w
  1856  0054  0084               	movwf	4
  1857  0055  1383               	bcf	3,7	;select IRP bank0
  1858  0056  083B               	movf	??_Interrupt+3,w
  1859  0057  0080               	movwf	0
  1860  0058  0AB9               	incf	??_Interrupt+1,f
  1861  0059  0BBA               	decfsz	??_Interrupt+2,f
  1862  005A  284D               	goto	u215_20
  1863                           
  1864                           ;main.c: 68: if(INTCONbits.T0IF){
  1865  005B  1D0B               	btfss	11,2	;volatile
  1866  005C  29A8               	goto	i1l61
  1867                           
  1868                           ;main.c: 72: if(counter == 3){
  1869  005D  3003               	movlw	3
  1870  005E  0657               	xorwf	_counter,w
  1871  005F  1D03               	btfss	3,2
  1872  0060  29A2               	goto	i1l1615
  1873                           
  1874                           ;main.c: 73: counter = 0;
  1875  0061  01D7               	clrf	_counter
  1876                           
  1877                           ;main.c: 75: if(value >= 10.0){
  1878  0062  085A               	movf	_value,w
  1879  0063  00F0               	movwf	___ftge@ff1
  1880  0064  085B               	movf	_value+1,w
  1881  0065  00F1               	movwf	___ftge@ff1+1
  1882  0066  085C               	movf	_value+2,w
  1883  0067  00F2               	movwf	___ftge@ff1+2
  1884  0068  3000               	movlw	0
  1885  0069  00F3               	movwf	___ftge@ff2
  1886  006A  3020               	movlw	32
  1887  006B  00F4               	movwf	___ftge@ff2+1
  1888  006C  3041               	movlw	65
  1889  006D  00F5               	movwf	___ftge@ff2+2
  1890  006E  2571               	fcall	___ftge
  1891  006F  1C03               	btfss	3,0
  1892  0070  28F6               	goto	i1l1571
  1893                           
  1894                           ;main.c: 76: number = (int)(value * 10.0);
  1895  0071  1283               	bcf	3,5	;RP0=0, select bank0
  1896  0072  1303               	bcf	3,6	;RP1=0, select bank0
  1897  0073  085A               	movf	_value,w
  1898  0074  00FB               	movwf	i1___ftmul@f2
  1899  0075  085B               	movf	_value+1,w
  1900  0076  00FC               	movwf	i1___ftmul@f2+1
  1901  0077  085C               	movf	_value+2,w
  1902  0078  00FD               	movwf	i1___ftmul@f2+2
  1903  0079  3000               	movlw	0
  1904  007A  00F8               	movwf	i1___ftmul@f1
  1905  007B  3020               	movlw	32
  1906  007C  00F9               	movwf	i1___ftmul@f1+1
  1907  007D  3041               	movlw	65
  1908  007E  00FA               	movwf	i1___ftmul@f1+2
  1909  007F  2284               	fcall	i1___ftmul
  1910  0080  0878               	movf	?i1___ftmul,w
  1911  0081  1283               	bcf	3,5	;RP0=0, select bank0
  1912  0082  1303               	bcf	3,6	;RP1=0, select bank0
  1913  0083  00AA               	movwf	___fttol@f1
  1914  0084  0879               	movf	?i1___ftmul+1,w
  1915  0085  00AB               	movwf	___fttol@f1+1
  1916  0086  087A               	movf	?i1___ftmul+2,w
  1917  0087  00AC               	movwf	___fttol@f1+2
  1918  0088  2409               	fcall	___fttol
  1919  0089  1283               	bcf	3,5	;RP0=0, select bank0
  1920  008A  1303               	bcf	3,6	;RP1=0, select bank0
  1921  008B  082B               	movf	?___fttol+1,w
  1922  008C  00D5               	movwf	Interrupt@number+1
  1923  008D  082A               	movf	?___fttol,w
  1924  008E  00D4               	movwf	Interrupt@number
  1925                           
  1926                           ;main.c: 78: if(!RA3 && controle == 1){
  1927  008F  1985               	btfsc	5,3	;volatile
  1928  0090  2894               	goto	i1l50
  1929  0091  035D               	decf	_controle,w
  1930  0092  1903               	btfsc	3,2
  1931  0093  2919               	goto	L11
  1932  0094                     i1l50:	
  1933                           ;main.c: 86: }else if(!RA6 && controle == 2){
  1934                           
  1935                           ;main.c: 84: PORTB = segments[uni];
  1936                           
  1937                           ;main.c: 83: RA3 = 1;
  1938                           
  1939                           ;main.c: 82: uni = (number % 10);
  1940                           
  1941                           ;main.c: 81: PORTB = 0;
  1942                           
  1943                           ;main.c: 80: RA3 = RA6 = RA7 = 0;
  1944                           
  1945                           ;main.c: 79: controle = 2;
  1946                           
  1947  0094  1B05               	btfsc	5,6	;volatile
  1948  0095  28BD               	goto	i1l52
  1949  0096  3002               	movlw	2
  1950  0097  065D               	xorwf	_controle,w
  1951  0098  1D03               	btfss	3,2
  1952  0099  28BD               	goto	i1l52
  1953                           
  1954                           ;main.c: 87: controle = 3;
  1955  009A  3003               	movlw	3
  1956  009B  00B8               	movwf	??_Interrupt
  1957  009C  0838               	movf	??_Interrupt,w
  1958  009D  00DD               	movwf	_controle
  1959                           
  1960                           ;main.c: 88: RA3 = RA6 = RA7 = 0;
  1961  009E  1385               	bcf	5,7	;volatile
  1962  009F  1305               	bcf	5,6	;volatile
  1963  00A0  1185               	bcf	5,3	;volatile
  1964                           
  1965                           ;main.c: 89: PORTB = 0;
  1966  00A1  0186               	clrf	6	;volatile
  1967                           
  1968                           ;main.c: 90: dez = (number % 100) / 10;
  1969  00A2  300A               	movlw	10
  1970  00A3  00F7               	movwf	___awdiv@divisor
  1971  00A4  3000               	movlw	0
  1972  00A5  00F8               	movwf	___awdiv@divisor+1
  1973  00A6  0855               	movf	Interrupt@number+1,w
  1974  00A7  00F3               	movwf	___awmod@dividend+1
  1975  00A8  0854               	movf	Interrupt@number,w
  1976  00A9  00F2               	movwf	___awmod@dividend
  1977  00AA  3064               	movlw	100
  1978  00AB  00F0               	movwf	___awmod@divisor
  1979  00AC  3000               	movlw	0
  1980  00AD  00F1               	movwf	___awmod@divisor+1
  1981  00AE  2629               	fcall	___awmod
  1982  00AF  0871               	movf	?___awmod+1,w
  1983  00B0  00FA               	movwf	___awdiv@dividend+1
  1984  00B1  0870               	movf	?___awmod,w
  1985  00B2  00F9               	movwf	___awdiv@dividend
  1986  00B3  25CE               	fcall	___awdiv
  1987  00B4  0877               	movf	?___awdiv,w
  1988  00B5  1283               	bcf	3,5	;RP0=0, select bank0
  1989  00B6  1303               	bcf	3,6	;RP1=0, select bank0
  1990  00B7  00B8               	movwf	??_Interrupt
  1991  00B8  0838               	movf	??_Interrupt,w
  1992  00B9  00D8               	movwf	_dez
  1993                           
  1994                           ;main.c: 91: RA6 = 1;
  1995  00BA  1705               	bsf	5,6	;volatile
  1996                           
  1997                           ;main.c: 92: PORTB = segments[dez] | (1<<7);
  1998  00BB  0858               	movf	_dez,w
  1999  00BC  299A               	goto	L7
  2000  00BD                     i1l52:	
  2001                           ;main.c: 94: }else if(!RA7 && controle == 3){
  2002                           
  2003  00BD  1B85               	btfsc	5,7	;volatile
  2004  00BE  29A2               	goto	i1l1615
  2005  00BF  3003               	movlw	3
  2006  00C0  065D               	xorwf	_controle,w
  2007  00C1  1D03               	btfss	3,2
  2008  00C2  29A2               	goto	i1l1615
  2009                           
  2010                           ;main.c: 95: controle = 1;
  2011  00C3  01DD               	clrf	_controle
  2012  00C4  0ADD               	incf	_controle,f
  2013                           
  2014                           ;main.c: 96: RA3 = RA6 = RA7 = 0;
  2015  00C5  1385               	bcf	5,7	;volatile
  2016  00C6  1305               	bcf	5,6	;volatile
  2017  00C7  1185               	bcf	5,3	;volatile
  2018                           
  2019                           ;main.c: 97: PORTB = 0;
  2020  00C8  0186               	clrf	6	;volatile
  2021                           
  2022                           ;main.c: 98: cen = (number / 100) - ((number % 100) / 100);
  2023  00C9  3064               	movlw	100
  2024  00CA  00F7               	movwf	___awdiv@divisor
  2025  00CB  3000               	movlw	0
  2026  00CC  00F8               	movwf	___awdiv@divisor+1
  2027  00CD  0855               	movf	Interrupt@number+1,w
  2028  00CE  00FA               	movwf	___awdiv@dividend+1
  2029  00CF  0854               	movf	Interrupt@number,w
  2030  00D0  00F9               	movwf	___awdiv@dividend
  2031  00D1  25CE               	fcall	___awdiv
  2032  00D2  0877               	movf	?___awdiv,w
  2033  00D3  1283               	bcf	3,5	;RP0=0, select bank0
  2034  00D4  1303               	bcf	3,6	;RP1=0, select bank0
  2035  00D5  00B8               	movwf	??_Interrupt
  2036  00D6  0878               	movf	?___awdiv+1,w
  2037  00D7  00B9               	movwf	??_Interrupt+1
  2038  00D8  3064               	movlw	100
  2039  00D9  00F7               	movwf	___awdiv@divisor
  2040  00DA  3000               	movlw	0
  2041  00DB  00F8               	movwf	___awdiv@divisor+1
  2042  00DC  0855               	movf	Interrupt@number+1,w
  2043  00DD  00F3               	movwf	___awmod@dividend+1
  2044  00DE  0854               	movf	Interrupt@number,w
  2045  00DF  00F2               	movwf	___awmod@dividend
  2046  00E0  3064               	movlw	100
  2047  00E1  00F0               	movwf	___awmod@divisor
  2048  00E2  3000               	movlw	0
  2049  00E3  00F1               	movwf	___awmod@divisor+1
  2050  00E4  2629               	fcall	___awmod
  2051  00E5  0871               	movf	?___awmod+1,w
  2052  00E6  00FA               	movwf	___awdiv@dividend+1
  2053  00E7  0870               	movf	?___awmod,w
  2054  00E8  00F9               	movwf	___awdiv@dividend
  2055  00E9  25CE               	fcall	___awdiv
  2056  00EA  0877               	movf	?___awdiv,w
  2057  00EB  3AFF               	xorlw	255
  2058  00EC  3E01               	addlw	1
  2059  00ED  1283               	bcf	3,5	;RP0=0, select bank0
  2060  00EE  1303               	bcf	3,6	;RP1=0, select bank0
  2061  00EF  0738               	addwf	??_Interrupt,w
  2062  00F0  00BA               	movwf	??_Interrupt+2
  2063  00F1  083A               	movf	??_Interrupt+2,w
  2064  00F2  00D6               	movwf	_cen
  2065                           
  2066                           ;main.c: 99: RA7 = 1;
  2067  00F3  1785               	bsf	5,7	;volatile
  2068                           
  2069                           ;main.c: 100: PORTB = segments[cen];
  2070  00F4  0856               	movf	_cen,w
  2071  00F5  295B               	goto	L9
  2072  00F6                     i1l1571:	
  2073                           ;main.c: 101: }
  2074                           ;main.c: 102: }else{
  2075                           
  2076                           
  2077                           ;main.c: 103: number = (int)(value * 100.0);
  2078  00F6  1283               	bcf	3,5	;RP0=0, select bank0
  2079  00F7  1303               	bcf	3,6	;RP1=0, select bank0
  2080  00F8  085A               	movf	_value,w
  2081  00F9  00FB               	movwf	i1___ftmul@f2
  2082  00FA  085B               	movf	_value+1,w
  2083  00FB  00FC               	movwf	i1___ftmul@f2+1
  2084  00FC  085C               	movf	_value+2,w
  2085  00FD  00FD               	movwf	i1___ftmul@f2+2
  2086  00FE  3000               	movlw	0
  2087  00FF  00F8               	movwf	i1___ftmul@f1
  2088  0100  30C8               	movlw	200
  2089  0101  00F9               	movwf	i1___ftmul@f1+1
  2090  0102  3042               	movlw	66
  2091  0103  00FA               	movwf	i1___ftmul@f1+2
  2092  0104  2284               	fcall	i1___ftmul
  2093  0105  0878               	movf	?i1___ftmul,w
  2094  0106  1283               	bcf	3,5	;RP0=0, select bank0
  2095  0107  1303               	bcf	3,6	;RP1=0, select bank0
  2096  0108  00AA               	movwf	___fttol@f1
  2097  0109  0879               	movf	?i1___ftmul+1,w
  2098  010A  00AB               	movwf	___fttol@f1+1
  2099  010B  087A               	movf	?i1___ftmul+2,w
  2100  010C  00AC               	movwf	___fttol@f1+2
  2101  010D  2409               	fcall	___fttol
  2102  010E  1283               	bcf	3,5	;RP0=0, select bank0
  2103  010F  1303               	bcf	3,6	;RP1=0, select bank0
  2104  0110  082B               	movf	?___fttol+1,w
  2105  0111  00D5               	movwf	Interrupt@number+1
  2106  0112  082A               	movf	?___fttol,w
  2107  0113  00D4               	movwf	Interrupt@number
  2108                           
  2109                           ;main.c: 105: if(!RA3 && controle == 1){
  2110  0114  1985               	btfsc	5,3	;volatile
  2111  0115  2933               	goto	i1l56
  2112  0116  035D               	decf	_controle,w
  2113  0117  1D03               	btfss	3,2
  2114  0118  2933               	goto	i1l56
  2115  0119                     L11:	
  2116                           
  2117                           ;main.c: 106: controle = 2;
  2118  0119  3002               	movlw	2
  2119  011A  00B8               	movwf	??_Interrupt
  2120  011B  0838               	movf	??_Interrupt,w
  2121  011C  00DD               	movwf	_controle
  2122                           
  2123                           ;main.c: 107: RA3 = RA6 = RA7 = 0;
  2124  011D  1385               	bcf	5,7	;volatile
  2125  011E  1305               	bcf	5,6	;volatile
  2126  011F  1185               	bcf	5,3	;volatile
  2127                           
  2128                           ;main.c: 108: PORTB = 0;
  2129  0120  0186               	clrf	6	;volatile
  2130                           
  2131                           ;main.c: 109: uni = (number % 10);
  2132  0121  300A               	movlw	10
  2133  0122  00F0               	movwf	___awmod@divisor
  2134  0123  3000               	movlw	0
  2135  0124  00F1               	movwf	___awmod@divisor+1
  2136  0125  0855               	movf	Interrupt@number+1,w
  2137  0126  00F3               	movwf	___awmod@dividend+1
  2138  0127  0854               	movf	Interrupt@number,w
  2139  0128  00F2               	movwf	___awmod@dividend
  2140  0129  2629               	fcall	___awmod
  2141  012A  0870               	movf	?___awmod,w
  2142  012B  1283               	bcf	3,5	;RP0=0, select bank0
  2143  012C  1303               	bcf	3,6	;RP1=0, select bank0
  2144  012D  00B8               	movwf	??_Interrupt
  2145  012E  0838               	movf	??_Interrupt,w
  2146  012F  00D9               	movwf	_uni
  2147                           
  2148                           ;main.c: 110: RA3 = 1;
  2149  0130  1585               	bsf	5,3	;volatile
  2150                           
  2151                           ;main.c: 111: PORTB = segments[uni];
  2152  0131  0859               	movf	_uni,w
  2153  0132  295B               	goto	L9
  2154  0133                     i1l56:	
  2155                           ;main.c: 113: }else if(!RA6 && controle == 2){
  2156                           
  2157  0133  1B05               	btfsc	5,6	;volatile
  2158  0134  2962               	goto	i1l58
  2159  0135  3002               	movlw	2
  2160  0136  065D               	xorwf	_controle,w
  2161  0137  1D03               	btfss	3,2
  2162  0138  2962               	goto	i1l58
  2163                           
  2164                           ;main.c: 114: controle = 3;
  2165  0139  3003               	movlw	3
  2166  013A  00B8               	movwf	??_Interrupt
  2167  013B  0838               	movf	??_Interrupt,w
  2168  013C  00DD               	movwf	_controle
  2169                           
  2170                           ;main.c: 115: RA3 = RA6 = RA7 = 0;
  2171  013D  1385               	bcf	5,7	;volatile
  2172  013E  1305               	bcf	5,6	;volatile
  2173  013F  1185               	bcf	5,3	;volatile
  2174                           
  2175                           ;main.c: 116: PORTB = 0;
  2176  0140  0186               	clrf	6	;volatile
  2177                           
  2178                           ;main.c: 117: dez = (number % 100) / 10;
  2179  0141  300A               	movlw	10
  2180  0142  00F7               	movwf	___awdiv@divisor
  2181  0143  3000               	movlw	0
  2182  0144  00F8               	movwf	___awdiv@divisor+1
  2183  0145  0855               	movf	Interrupt@number+1,w
  2184  0146  00F3               	movwf	___awmod@dividend+1
  2185  0147  0854               	movf	Interrupt@number,w
  2186  0148  00F2               	movwf	___awmod@dividend
  2187  0149  3064               	movlw	100
  2188  014A  00F0               	movwf	___awmod@divisor
  2189  014B  3000               	movlw	0
  2190  014C  00F1               	movwf	___awmod@divisor+1
  2191  014D  2629               	fcall	___awmod
  2192  014E  0871               	movf	?___awmod+1,w
  2193  014F  00FA               	movwf	___awdiv@dividend+1
  2194  0150  0870               	movf	?___awmod,w
  2195  0151  00F9               	movwf	___awdiv@dividend
  2196  0152  25CE               	fcall	___awdiv
  2197  0153  0877               	movf	?___awdiv,w
  2198  0154  1283               	bcf	3,5	;RP0=0, select bank0
  2199  0155  1303               	bcf	3,6	;RP1=0, select bank0
  2200  0156  00B8               	movwf	??_Interrupt
  2201  0157  0838               	movf	??_Interrupt,w
  2202  0158  00D8               	movwf	_dez
  2203                           
  2204                           ;main.c: 118: RA6 = 1;
  2205  0159  1705               	bsf	5,6	;volatile
  2206                           
  2207                           ;main.c: 119: PORTB = segments[dez];
  2208  015A  0858               	movf	_dez,w
  2209  015B                     L9:	
  2210  015B  00B8               	movwf	??_Interrupt
  2211  015C  0738               	addwf	??_Interrupt,w
  2212  015D  3E40               	addlw	(low (Interrupt@segments| 0))& (0+255)
  2213  015E  0084               	movwf	4
  2214  015F  1383               	bcf	3,7	;select IRP bank0
  2215  0160  0800               	movf	0,w
  2216  0161  29A1               	goto	L6
  2217  0162                     i1l58:	
  2218                           ;main.c: 121: }else if(!RA7 && controle == 3){
  2219                           
  2220  0162  1B85               	btfsc	5,7	;volatile
  2221  0163  29A2               	goto	i1l1615
  2222  0164  3003               	movlw	3
  2223  0165  065D               	xorwf	_controle,w
  2224  0166  1D03               	btfss	3,2
  2225  0167  29A2               	goto	i1l1615
  2226                           
  2227                           ;main.c: 122: controle = 1;
  2228  0168  01DD               	clrf	_controle
  2229  0169  0ADD               	incf	_controle,f
  2230                           
  2231                           ;main.c: 123: RA3 = RA6 = RA7 = 0;
  2232  016A  1385               	bcf	5,7	;volatile
  2233  016B  1305               	bcf	5,6	;volatile
  2234  016C  1185               	bcf	5,3	;volatile
  2235                           
  2236                           ;main.c: 124: PORTB = 0;
  2237  016D  0186               	clrf	6	;volatile
  2238                           
  2239                           ;main.c: 125: cen = (number / 100) - ((number % 100) / 100);
  2240  016E  3064               	movlw	100
  2241  016F  00F7               	movwf	___awdiv@divisor
  2242  0170  3000               	movlw	0
  2243  0171  00F8               	movwf	___awdiv@divisor+1
  2244  0172  0855               	movf	Interrupt@number+1,w
  2245  0173  00FA               	movwf	___awdiv@dividend+1
  2246  0174  0854               	movf	Interrupt@number,w
  2247  0175  00F9               	movwf	___awdiv@dividend
  2248  0176  25CE               	fcall	___awdiv
  2249  0177  0877               	movf	?___awdiv,w
  2250  0178  1283               	bcf	3,5	;RP0=0, select bank0
  2251  0179  1303               	bcf	3,6	;RP1=0, select bank0
  2252  017A  00B8               	movwf	??_Interrupt
  2253  017B  0878               	movf	?___awdiv+1,w
  2254  017C  00B9               	movwf	??_Interrupt+1
  2255  017D  3064               	movlw	100
  2256  017E  00F7               	movwf	___awdiv@divisor
  2257  017F  3000               	movlw	0
  2258  0180  00F8               	movwf	___awdiv@divisor+1
  2259  0181  0855               	movf	Interrupt@number+1,w
  2260  0182  00F3               	movwf	___awmod@dividend+1
  2261  0183  0854               	movf	Interrupt@number,w
  2262  0184  00F2               	movwf	___awmod@dividend
  2263  0185  3064               	movlw	100
  2264  0186  00F0               	movwf	___awmod@divisor
  2265  0187  3000               	movlw	0
  2266  0188  00F1               	movwf	___awmod@divisor+1
  2267  0189  2629               	fcall	___awmod
  2268  018A  0871               	movf	?___awmod+1,w
  2269  018B  00FA               	movwf	___awdiv@dividend+1
  2270  018C  0870               	movf	?___awmod,w
  2271  018D  00F9               	movwf	___awdiv@dividend
  2272  018E  25CE               	fcall	___awdiv
  2273  018F  0877               	movf	?___awdiv,w
  2274  0190  3AFF               	xorlw	255
  2275  0191  3E01               	addlw	1
  2276  0192  1283               	bcf	3,5	;RP0=0, select bank0
  2277  0193  1303               	bcf	3,6	;RP1=0, select bank0
  2278  0194  0738               	addwf	??_Interrupt,w
  2279  0195  00BA               	movwf	??_Interrupt+2
  2280  0196  083A               	movf	??_Interrupt+2,w
  2281  0197  00D6               	movwf	_cen
  2282                           
  2283                           ;main.c: 126: RA7 = 1;
  2284  0198  1785               	bsf	5,7	;volatile
  2285                           
  2286                           ;main.c: 127: PORTB = segments[cen] | (1<<7);
  2287  0199  0856               	movf	_cen,w
  2288  019A                     L7:	
  2289  019A  00B8               	movwf	??_Interrupt
  2290  019B  0738               	addwf	??_Interrupt,w
  2291  019C  3E40               	addlw	(low (Interrupt@segments| 0))& (0+255)
  2292  019D  0084               	movwf	4
  2293  019E  1383               	bcf	3,7	;select IRP bank0
  2294  019F  0800               	movf	0,w
  2295  01A0  3880               	iorlw	128
  2296  01A1                     L6:	
  2297  01A1  0086               	movwf	6	;volatile
  2298  01A2                     i1l1615:	
  2299                           
  2300                           ;main.c: 128: }
  2301                           ;main.c: 129: }
  2302                           ;main.c: 130: }
  2303                           ;main.c: 131: TMR0 = 0;
  2304  01A2  0181               	clrf	1	;volatile
  2305                           
  2306                           ;main.c: 132: INTCONbits.T0IF = 0;
  2307  01A3  110B               	bcf	11,2	;volatile
  2308                           
  2309                           ;main.c: 133: counter++;
  2310  01A4  3001               	movlw	1
  2311  01A5  00B8               	movwf	??_Interrupt
  2312  01A6  0838               	movf	??_Interrupt,w
  2313  01A7  07D7               	addwf	_counter,f
  2314  01A8                     i1l61:	
  2315  01A8  083F               	movf	??_Interrupt+7,w
  2316  01A9  00FF               	movwf	127
  2317  01AA  083E               	movf	??_Interrupt+6,w
  2318  01AB  008A               	movwf	10
  2319  01AC  083D               	movf	??_Interrupt+5,w
  2320  01AD  0084               	movwf	4
  2321  01AE  0E3C               	swapf	(??_Interrupt+4)^0,w
  2322  01AF  0083               	movwf	3
  2323  01B0  0EFE               	swapf	126,f
  2324  01B1  0E7E               	swapf	126,w
  2325  01B2  0009               	retfie
  2326  01B3                     __end_of_Interrupt:	
  2327                           
  2328                           	psect	intentry
  2329  0004                     __pintentry:	
  2330                           ;incstack = 0
  2331                           ; Regs used in _Interrupt: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2332                           
  2333  0004                     interrupt_function:	
  2334  007E                     saved_w	set	btemp
  2335  0004  00FE               	movwf	btemp
  2336  0005  0E03               	swapf	3,w
  2337  0006  1283               	bcf	3,5	;RP0=0, select bank0
  2338  0007  1303               	bcf	3,6	;RP1=0, select bank0
  2339  0008  00BC               	movwf	??_Interrupt+4
  2340  0009  0804               	movf	4,w
  2341  000A  00BD               	movwf	??_Interrupt+5
  2342  000B  080A               	movf	10,w
  2343  000C  00BE               	movwf	??_Interrupt+6
  2344  000D  087F               	movf	btemp+1,w
  2345  000E  00BF               	movwf	??_Interrupt+7
  2346  000F  2845               	ljmp	_Interrupt
  2347                           
  2348                           	psect	text10
  2349  0284                     __ptext10:	
  2350 ;; *************** function i1___ftmul *****************
  2351 ;; Defined at:
  2352 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\ftmul.c"
  2353 ;; Parameters:    Size  Location     Type
  2354 ;;  f1              3    8[COMMON] float 
  2355 ;;  f2              3   11[COMMON] float 
  2356 ;; Auto vars:     Size  Location     Type
  2357 ;;  __ftmul         3    5[BANK0 ] unsigned um
  2358 ;;  __ftmul         1    9[BANK0 ] unsigned char 
  2359 ;;  __ftmul         1    8[BANK0 ] unsigned char 
  2360 ;;  __ftmul         1    4[BANK0 ] unsigned char 
  2361 ;; Return value:  Size  Location     Type
  2362 ;;                  3    8[COMMON] float 
  2363 ;; Registers used:
  2364 ;;		wreg, status,2, status,0, pclath, cstack
  2365 ;; Tracked objects:
  2366 ;;		On entry : 0/0
  2367 ;;		On exit  : 0/0
  2368 ;;		Unchanged: 0/0
  2369 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2370 ;;      Params:         6       0       0       0
  2371 ;;      Locals:         0       6       0       0
  2372 ;;      Temps:          0       4       0       0
  2373 ;;      Totals:         6      10       0       0
  2374 ;;Total ram usage:       16 bytes
  2375 ;; Hardware stack levels used:    1
  2376 ;; Hardware stack levels required when called:    1
  2377 ;; This function calls:
  2378 ;;		i1___ftpack
  2379 ;; This function is called by:
  2380 ;;		_Interrupt
  2381 ;; This function uses a non-reentrant model
  2382 ;;
  2383                           
  2384                           
  2385                           ;psect for function i1___ftmul
  2386  0284                     i1___ftmul:	
  2387                           
  2388                           ;incstack = 0
  2389                           ; Regs used in i1___ftmul: [wreg+status,2+status,0+pclath+cstack]
  2390  0284  0878               	movf	i1___ftmul@f1,w
  2391  0285  1283               	bcf	3,5	;RP0=0, select bank0
  2392  0286  1303               	bcf	3,6	;RP1=0, select bank0
  2393  0287  00A0               	movwf	??i1___ftmul
  2394  0288  0879               	movf	i1___ftmul@f1+1,w
  2395  0289  00A1               	movwf	??i1___ftmul+1
  2396  028A  087A               	movf	i1___ftmul@f1+2,w
  2397  028B  00A2               	movwf	??i1___ftmul+2
  2398  028C  1003               	clrc
  2399  028D  0D21               	rlf	??i1___ftmul+1,w
  2400  028E  0D22               	rlf	??i1___ftmul+2,w
  2401  028F  00A3               	movwf	??i1___ftmul+3
  2402  0290  0823               	movf	??i1___ftmul+3,w
  2403  0291  00A4               	movwf	i1___ftmul@exp
  2404  0292  0824               	movf	i1___ftmul@exp,w
  2405  0293  1D03               	btfss	3,2
  2406  0294  2A9C               	goto	i1l1473
  2407  0295  3000               	movlw	0
  2408  0296  00F8               	movwf	?i1___ftmul
  2409  0297  3000               	movlw	0
  2410  0298  00F9               	movwf	?i1___ftmul+1
  2411  0299  3000               	movlw	0
  2412  029A  00FA               	movwf	?i1___ftmul+2
  2413  029B  0008               	return
  2414  029C                     i1l1473:	
  2415  029C  087B               	movf	i1___ftmul@f2,w
  2416  029D  00A0               	movwf	??i1___ftmul
  2417  029E  087C               	movf	i1___ftmul@f2+1,w
  2418  029F  00A1               	movwf	??i1___ftmul+1
  2419  02A0  087D               	movf	i1___ftmul@f2+2,w
  2420  02A1  00A2               	movwf	??i1___ftmul+2
  2421  02A2  1003               	clrc
  2422  02A3  0D21               	rlf	??i1___ftmul+1,w
  2423  02A4  0D22               	rlf	??i1___ftmul+2,w
  2424  02A5  00A3               	movwf	??i1___ftmul+3
  2425  02A6  0823               	movf	??i1___ftmul+3,w
  2426  02A7  00A9               	movwf	i1___ftmul@sign
  2427  02A8  0829               	movf	i1___ftmul@sign,w
  2428  02A9  1D03               	btfss	3,2
  2429  02AA  2AB2               	goto	i1l1479
  2430  02AB  3000               	movlw	0
  2431  02AC  00F8               	movwf	?i1___ftmul
  2432  02AD  3000               	movlw	0
  2433  02AE  00F9               	movwf	?i1___ftmul+1
  2434  02AF  3000               	movlw	0
  2435  02B0  00FA               	movwf	?i1___ftmul+2
  2436  02B1  0008               	return
  2437  02B2                     i1l1479:	
  2438  02B2  0829               	movf	i1___ftmul@sign,w
  2439  02B3  3E7B               	addlw	123
  2440  02B4  00A0               	movwf	??i1___ftmul
  2441  02B5  0820               	movf	??i1___ftmul,w
  2442  02B6  07A4               	addwf	i1___ftmul@exp,f
  2443  02B7  0878               	movf	i1___ftmul@f1,w
  2444  02B8  00A0               	movwf	??i1___ftmul
  2445  02B9  0879               	movf	i1___ftmul@f1+1,w
  2446  02BA  00A1               	movwf	??i1___ftmul+1
  2447  02BB  087A               	movf	i1___ftmul@f1+2,w
  2448  02BC  00A2               	movwf	??i1___ftmul+2
  2449  02BD  3010               	movlw	16
  2450  02BE                     u203_25:	
  2451  02BE  1003               	clrc
  2452  02BF  0CA2               	rrf	??i1___ftmul+2,f
  2453  02C0  0CA1               	rrf	??i1___ftmul+1,f
  2454  02C1  0CA0               	rrf	??i1___ftmul,f
  2455  02C2  3EFF               	addlw	-1
  2456  02C3  1D03               	skipz
  2457  02C4  2ABE               	goto	u203_25
  2458  02C5  0820               	movf	??i1___ftmul,w
  2459  02C6  00A3               	movwf	??i1___ftmul+3
  2460  02C7  0823               	movf	??i1___ftmul+3,w
  2461  02C8  00A9               	movwf	i1___ftmul@sign
  2462  02C9  087B               	movf	i1___ftmul@f2,w
  2463  02CA  00A0               	movwf	??i1___ftmul
  2464  02CB  087C               	movf	i1___ftmul@f2+1,w
  2465  02CC  00A1               	movwf	??i1___ftmul+1
  2466  02CD  087D               	movf	i1___ftmul@f2+2,w
  2467  02CE  00A2               	movwf	??i1___ftmul+2
  2468  02CF  3010               	movlw	16
  2469  02D0                     u204_25:	
  2470  02D0  1003               	clrc
  2471  02D1  0CA2               	rrf	??i1___ftmul+2,f
  2472  02D2  0CA1               	rrf	??i1___ftmul+1,f
  2473  02D3  0CA0               	rrf	??i1___ftmul,f
  2474  02D4  3EFF               	addlw	-1
  2475  02D5  1D03               	skipz
  2476  02D6  2AD0               	goto	u204_25
  2477  02D7  0820               	movf	??i1___ftmul,w
  2478  02D8  00A3               	movwf	??i1___ftmul+3
  2479  02D9  0823               	movf	??i1___ftmul+3,w
  2480  02DA  06A9               	xorwf	i1___ftmul@sign,f
  2481  02DB  3080               	movlw	128
  2482  02DC  00A0               	movwf	??i1___ftmul
  2483  02DD  0820               	movf	??i1___ftmul,w
  2484  02DE  05A9               	andwf	i1___ftmul@sign,f
  2485  02DF  17F9               	bsf	i1___ftmul@f1+1,7
  2486  02E0  17FC               	bsf	i1___ftmul@f2+1,7
  2487  02E1  30FF               	movlw	255
  2488  02E2  05FB               	andwf	i1___ftmul@f2,f
  2489  02E3  30FF               	movlw	255
  2490  02E4  05FC               	andwf	i1___ftmul@f2+1,f
  2491  02E5  3000               	movlw	0
  2492  02E6  05FD               	andwf	i1___ftmul@f2+2,f
  2493  02E7  3000               	movlw	0
  2494  02E8  00A5               	movwf	i1___ftmul@f3_as_product
  2495  02E9  3000               	movlw	0
  2496  02EA  00A6               	movwf	i1___ftmul@f3_as_product+1
  2497  02EB  3000               	movlw	0
  2498  02EC  00A7               	movwf	i1___ftmul@f3_as_product+2
  2499  02ED  3007               	movlw	7
  2500  02EE  00A0               	movwf	??i1___ftmul
  2501  02EF  0820               	movf	??i1___ftmul,w
  2502  02F0  00A8               	movwf	i1___ftmul@cntr
  2503  02F1                     i1l1491:	
  2504  02F1  1C78               	btfss	i1___ftmul@f1,0
  2505  02F2  2B01               	goto	i1l1495
  2506  02F3  087B               	movf	i1___ftmul@f2,w
  2507  02F4  07A5               	addwf	i1___ftmul@f3_as_product,f
  2508  02F5  087C               	movf	i1___ftmul@f2+1,w
  2509  02F6  1103               	clrz
  2510  02F7  1803               	skipnc
  2511  02F8  0A7C               	incf	i1___ftmul@f2+1,w
  2512  02F9  1D03               	btfss	3,2
  2513  02FA  07A6               	addwf	i1___ftmul@f3_as_product+1,f
  2514  02FB  087D               	movf	i1___ftmul@f2+2,w
  2515  02FC  1103               	clrz
  2516  02FD  1803               	skipnc
  2517  02FE  0A7D               	incf	i1___ftmul@f2+2,w
  2518  02FF  1D03               	btfss	3,2
  2519  0300  07A7               	addwf	i1___ftmul@f3_as_product+2,f
  2520  0301                     i1l1495:	
  2521  0301  3001               	movlw	1
  2522  0302                     u207_25:	
  2523  0302  1003               	clrc
  2524  0303  0CFA               	rrf	i1___ftmul@f1+2,f
  2525  0304  0CF9               	rrf	i1___ftmul@f1+1,f
  2526  0305  0CF8               	rrf	i1___ftmul@f1,f
  2527  0306  3EFF               	addlw	-1
  2528  0307  1D03               	skipz
  2529  0308  2B02               	goto	u207_25
  2530  0309  3001               	movlw	1
  2531  030A                     u208_25:	
  2532  030A  1003               	clrc
  2533  030B  0DFB               	rlf	i1___ftmul@f2,f
  2534  030C  0DFC               	rlf	i1___ftmul@f2+1,f
  2535  030D  0DFD               	rlf	i1___ftmul@f2+2,f
  2536  030E  3EFF               	addlw	-1
  2537  030F  1D03               	skipz
  2538  0310  2B0A               	goto	u208_25
  2539  0311  3001               	movlw	1
  2540  0312  02A8               	subwf	i1___ftmul@cntr,f
  2541  0313  1D03               	btfss	3,2
  2542  0314  2AF1               	goto	i1l1491
  2543  0315  3009               	movlw	9
  2544  0316  00A0               	movwf	??i1___ftmul
  2545  0317  0820               	movf	??i1___ftmul,w
  2546  0318  00A8               	movwf	i1___ftmul@cntr
  2547  0319                     i1l1503:	
  2548  0319  1C78               	btfss	i1___ftmul@f1,0
  2549  031A  2B29               	goto	i1l1507
  2550  031B  087B               	movf	i1___ftmul@f2,w
  2551  031C  07A5               	addwf	i1___ftmul@f3_as_product,f
  2552  031D  087C               	movf	i1___ftmul@f2+1,w
  2553  031E  1103               	clrz
  2554  031F  1803               	skipnc
  2555  0320  0A7C               	incf	i1___ftmul@f2+1,w
  2556  0321  1D03               	btfss	3,2
  2557  0322  07A6               	addwf	i1___ftmul@f3_as_product+1,f
  2558  0323  087D               	movf	i1___ftmul@f2+2,w
  2559  0324  1103               	clrz
  2560  0325  1803               	skipnc
  2561  0326  0A7D               	incf	i1___ftmul@f2+2,w
  2562  0327  1D03               	btfss	3,2
  2563  0328  07A7               	addwf	i1___ftmul@f3_as_product+2,f
  2564  0329                     i1l1507:	
  2565  0329  3001               	movlw	1
  2566  032A                     u212_25:	
  2567  032A  1003               	clrc
  2568  032B  0CFA               	rrf	i1___ftmul@f1+2,f
  2569  032C  0CF9               	rrf	i1___ftmul@f1+1,f
  2570  032D  0CF8               	rrf	i1___ftmul@f1,f
  2571  032E  3EFF               	addlw	-1
  2572  032F  1D03               	skipz
  2573  0330  2B2A               	goto	u212_25
  2574  0331  3001               	movlw	1
  2575  0332                     u213_25:	
  2576  0332  1003               	clrc
  2577  0333  0CA7               	rrf	i1___ftmul@f3_as_product+2,f
  2578  0334  0CA6               	rrf	i1___ftmul@f3_as_product+1,f
  2579  0335  0CA5               	rrf	i1___ftmul@f3_as_product,f
  2580  0336  3EFF               	addlw	-1
  2581  0337  1D03               	skipz
  2582  0338  2B32               	goto	u213_25
  2583  0339  3001               	movlw	1
  2584  033A  02A8               	subwf	i1___ftmul@cntr,f
  2585  033B  1D03               	btfss	3,2
  2586  033C  2B19               	goto	i1l1503
  2587  033D  0825               	movf	i1___ftmul@f3_as_product,w
  2588  033E  00F0               	movwf	i1___ftpack@arg
  2589  033F  0826               	movf	i1___ftmul@f3_as_product+1,w
  2590  0340  00F1               	movwf	i1___ftpack@arg+1
  2591  0341  0827               	movf	i1___ftmul@f3_as_product+2,w
  2592  0342  00F2               	movwf	i1___ftpack@arg+2
  2593  0343  0824               	movf	i1___ftmul@exp,w
  2594  0344  00A0               	movwf	??i1___ftmul
  2595  0345  0820               	movf	??i1___ftmul,w
  2596  0346  00F3               	movwf	i1___ftpack@exp
  2597  0347  0829               	movf	i1___ftmul@sign,w
  2598  0348  00A1               	movwf	??i1___ftmul+1
  2599  0349  0821               	movf	??i1___ftmul+1,w
  2600  034A  00F4               	movwf	i1___ftpack@sign
  2601  034B  2505               	fcall	i1___ftpack
  2602  034C  0870               	movf	?i1___ftpack,w
  2603  034D  00F8               	movwf	?i1___ftmul
  2604  034E  0871               	movf	?i1___ftpack+1,w
  2605  034F  00F9               	movwf	?i1___ftmul+1
  2606  0350  0872               	movf	?i1___ftpack+2,w
  2607  0351  00FA               	movwf	?i1___ftmul+2
  2608  0352  0008               	return
  2609  0353                     __end_ofi1___ftmul:	
  2610                           
  2611                           	psect	text11
  2612  0505                     __ptext11:	
  2613 ;; *************** function i1___ftpack *****************
  2614 ;; Defined at:
  2615 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\float.c"
  2616 ;; Parameters:    Size  Location     Type
  2617 ;;  arg             3    0[COMMON] unsigned um
  2618 ;;  exp             1    3[COMMON] unsigned char 
  2619 ;;  sign            1    4[COMMON] unsigned char 
  2620 ;; Auto vars:     Size  Location     Type
  2621 ;;		None
  2622 ;; Return value:  Size  Location     Type
  2623 ;;                  3    0[COMMON] float 
  2624 ;; Registers used:
  2625 ;;		wreg, status,2, status,0
  2626 ;; Tracked objects:
  2627 ;;		On entry : 0/0
  2628 ;;		On exit  : 0/0
  2629 ;;		Unchanged: 0/0
  2630 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2631 ;;      Params:         5       0       0       0
  2632 ;;      Locals:         0       0       0       0
  2633 ;;      Temps:          3       0       0       0
  2634 ;;      Totals:         8       0       0       0
  2635 ;;Total ram usage:        8 bytes
  2636 ;; Hardware stack levels used:    1
  2637 ;; This function calls:
  2638 ;;		Nothing
  2639 ;; This function is called by:
  2640 ;;		i1___ftmul
  2641 ;; This function uses a non-reentrant model
  2642 ;;
  2643                           
  2644                           
  2645                           ;psect for function i1___ftpack
  2646  0505                     i1___ftpack:	
  2647                           
  2648                           ;incstack = 0
  2649                           ; Regs used in i1___ftpack: [wreg+status,2+status,0]
  2650  0505  0873               	movf	i1___ftpack@exp,w
  2651  0506  1903               	btfsc	3,2
  2652  0507  2D0D               	goto	i1l1291
  2653  0508  0872               	movf	i1___ftpack@arg+2,w
  2654  0509  0471               	iorwf	i1___ftpack@arg+1,w
  2655  050A  0470               	iorwf	i1___ftpack@arg,w
  2656  050B  1D03               	skipz
  2657  050C  2D20               	goto	i1l1297
  2658  050D                     i1l1291:	
  2659  050D  3000               	movlw	0
  2660  050E  00F0               	movwf	?i1___ftpack
  2661  050F  3000               	movlw	0
  2662  0510  00F1               	movwf	?i1___ftpack+1
  2663  0511  3000               	movlw	0
  2664  0512  00F2               	movwf	?i1___ftpack+2
  2665  0513  0008               	return
  2666  0514                     i1l1295:	
  2667  0514  3001               	movlw	1
  2668  0515  00F5               	movwf	??i1___ftpack
  2669  0516  0875               	movf	??i1___ftpack,w
  2670  0517  07F3               	addwf	i1___ftpack@exp,f
  2671  0518  3001               	movlw	1
  2672  0519                     u157_25:	
  2673  0519  1003               	clrc
  2674  051A  0CF2               	rrf	i1___ftpack@arg+2,f
  2675  051B  0CF1               	rrf	i1___ftpack@arg+1,f
  2676  051C  0CF0               	rrf	i1___ftpack@arg,f
  2677  051D  3EFF               	addlw	-1
  2678  051E  1D03               	skipz
  2679  051F  2D19               	goto	u157_25
  2680  0520                     i1l1297:	
  2681  0520  30FE               	movlw	254
  2682  0521  0572               	andwf	i1___ftpack@arg+2,w
  2683  0522  1903               	btfsc	3,2
  2684  0523  2D3B               	goto	i1l326
  2685  0524  2D14               	goto	i1l1295
  2686  0525                     i1l1299:	
  2687  0525  3001               	movlw	1
  2688  0526  00F5               	movwf	??i1___ftpack
  2689  0527  0875               	movf	??i1___ftpack,w
  2690  0528  07F3               	addwf	i1___ftpack@exp,f
  2691  0529  3001               	movlw	1
  2692  052A  07F0               	addwf	i1___ftpack@arg,f
  2693  052B  3000               	movlw	0
  2694  052C  1803               	skipnc
  2695  052D  3001               	movlw	1
  2696  052E  07F1               	addwf	i1___ftpack@arg+1,f
  2697  052F  3000               	movlw	0
  2698  0530  1803               	skipnc
  2699  0531  3001               	movlw	1
  2700  0532  07F2               	addwf	i1___ftpack@arg+2,f
  2701  0533  3001               	movlw	1
  2702  0534                     u159_25:	
  2703  0534  1003               	clrc
  2704  0535  0CF2               	rrf	i1___ftpack@arg+2,f
  2705  0536  0CF1               	rrf	i1___ftpack@arg+1,f
  2706  0537  0CF0               	rrf	i1___ftpack@arg,f
  2707  0538  3EFF               	addlw	-1
  2708  0539  1D03               	skipz
  2709  053A  2D34               	goto	u159_25
  2710  053B                     i1l326:	
  2711  053B  30FF               	movlw	255
  2712  053C  0572               	andwf	i1___ftpack@arg+2,w
  2713  053D  1903               	btfsc	3,2
  2714  053E  2D4A               	goto	i1l1307
  2715  053F  2D25               	goto	i1l1299
  2716  0540                     i1l1305:	
  2717  0540  3001               	movlw	1
  2718  0541  02F3               	subwf	i1___ftpack@exp,f
  2719  0542  3001               	movlw	1
  2720  0543                     u161_25:	
  2721  0543  1003               	clrc
  2722  0544  0DF0               	rlf	i1___ftpack@arg,f
  2723  0545  0DF1               	rlf	i1___ftpack@arg+1,f
  2724  0546  0DF2               	rlf	i1___ftpack@arg+2,f
  2725  0547  3EFF               	addlw	-1
  2726  0548  1D03               	skipz
  2727  0549  2D43               	goto	u161_25
  2728  054A                     i1l1307:	
  2729  054A  1BF1               	btfsc	i1___ftpack@arg+1,7
  2730  054B  2D50               	goto	i1l333
  2731  054C  3002               	movlw	2
  2732  054D  0273               	subwf	i1___ftpack@exp,w
  2733  054E  1803               	skipnc
  2734  054F  2D40               	goto	i1l1305
  2735  0550                     i1l333:	
  2736  0550  1873               	btfsc	i1___ftpack@exp,0
  2737  0551  2D58               	goto	i1l334
  2738  0552  30FF               	movlw	255
  2739  0553  05F0               	andwf	i1___ftpack@arg,f
  2740  0554  307F               	movlw	127
  2741  0555  05F1               	andwf	i1___ftpack@arg+1,f
  2742  0556  30FF               	movlw	255
  2743  0557  05F2               	andwf	i1___ftpack@arg+2,f
  2744  0558                     i1l334:	
  2745  0558  1003               	clrc
  2746  0559  0CF3               	rrf	i1___ftpack@exp,f
  2747  055A  0873               	movf	i1___ftpack@exp,w
  2748  055B  00F5               	movwf	??i1___ftpack
  2749  055C  01F6               	clrf	??i1___ftpack+1
  2750  055D  01F7               	clrf	??i1___ftpack+2
  2751  055E  3010               	movlw	16
  2752  055F                     u165_25:	
  2753  055F  1003               	clrc
  2754  0560  0DF5               	rlf	??i1___ftpack,f
  2755  0561  0DF6               	rlf	??i1___ftpack+1,f
  2756  0562  0DF7               	rlf	??i1___ftpack+2,f
  2757  0563  3EFF               	addlw	-1
  2758  0564  1D03               	skipz
  2759  0565  2D5F               	goto	u165_25
  2760  0566  0875               	movf	??i1___ftpack,w
  2761  0567  04F0               	iorwf	i1___ftpack@arg,f
  2762  0568  0876               	movf	??i1___ftpack+1,w
  2763  0569  04F1               	iorwf	i1___ftpack@arg+1,f
  2764  056A  0877               	movf	??i1___ftpack+2,w
  2765  056B  04F2               	iorwf	i1___ftpack@arg+2,f
  2766  056C  0874               	movf	i1___ftpack@sign,w
  2767  056D  1903               	btfsc	3,2
  2768  056E  0008               	return
  2769  056F  17F2               	bsf	i1___ftpack@arg+2,7
  2770  0570  0008               	return
  2771  0571                     __end_ofi1___ftpack:	
  2772                           
  2773                           	psect	text12
  2774  0409                     __ptext12:	
  2775 ;; *************** function ___fttol *****************
  2776 ;; Defined at:
  2777 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\fttol.c"
  2778 ;; Parameters:    Size  Location     Type
  2779 ;;  f1              3   10[BANK0 ] float 
  2780 ;; Auto vars:     Size  Location     Type
  2781 ;;  lval            4   19[BANK0 ] unsigned long 
  2782 ;;  exp1            1   23[BANK0 ] unsigned char 
  2783 ;;  sign1           1   18[BANK0 ] unsigned char 
  2784 ;; Return value:  Size  Location     Type
  2785 ;;                  4   10[BANK0 ] long 
  2786 ;; Registers used:
  2787 ;;		wreg, status,2, status,0
  2788 ;; Tracked objects:
  2789 ;;		On entry : 0/0
  2790 ;;		On exit  : 0/0
  2791 ;;		Unchanged: 0/0
  2792 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2793 ;;      Params:         0       4       0       0
  2794 ;;      Locals:         0       6       0       0
  2795 ;;      Temps:          0       4       0       0
  2796 ;;      Totals:         0      14       0       0
  2797 ;;Total ram usage:       14 bytes
  2798 ;; Hardware stack levels used:    1
  2799 ;; This function calls:
  2800 ;;		Nothing
  2801 ;; This function is called by:
  2802 ;;		_Interrupt
  2803 ;; This function uses a non-reentrant model
  2804 ;;
  2805                           
  2806                           
  2807                           ;psect for function ___fttol
  2808  0409                     ___fttol:	
  2809                           
  2810                           ;incstack = 0
  2811                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  2812  0409  1283               	bcf	3,5	;RP0=0, select bank0
  2813  040A  1303               	bcf	3,6	;RP1=0, select bank0
  2814  040B  082A               	movf	___fttol@f1,w
  2815  040C  00AE               	movwf	??___fttol
  2816  040D  082B               	movf	___fttol@f1+1,w
  2817  040E  00AF               	movwf	??___fttol+1
  2818  040F  082C               	movf	___fttol@f1+2,w
  2819  0410  00B0               	movwf	??___fttol+2
  2820  0411  1003               	clrc
  2821  0412  0D2F               	rlf	??___fttol+1,w
  2822  0413  0D30               	rlf	??___fttol+2,w
  2823  0414  00B1               	movwf	??___fttol+3
  2824  0415  0831               	movf	??___fttol+3,w
  2825  0416  00B7               	movwf	___fttol@exp1
  2826  0417  0837               	movf	___fttol@exp1,w
  2827  0418  1D03               	btfss	3,2
  2828  0419  2C23               	goto	i1l1431
  2829  041A  3000               	movlw	0
  2830  041B  00AD               	movwf	?___fttol+3
  2831  041C  3000               	movlw	0
  2832  041D  00AC               	movwf	?___fttol+2
  2833  041E  3000               	movlw	0
  2834  041F  00AB               	movwf	?___fttol+1
  2835  0420  3000               	movlw	0
  2836  0421  00AA               	movwf	?___fttol
  2837  0422  0008               	return
  2838  0423                     i1l1431:	
  2839  0423  082A               	movf	___fttol@f1,w
  2840  0424  00AE               	movwf	??___fttol
  2841  0425  082B               	movf	___fttol@f1+1,w
  2842  0426  00AF               	movwf	??___fttol+1
  2843  0427  082C               	movf	___fttol@f1+2,w
  2844  0428  00B0               	movwf	??___fttol+2
  2845  0429  3017               	movlw	23
  2846  042A                     u192_25:	
  2847  042A  1003               	clrc
  2848  042B  0CB0               	rrf	??___fttol+2,f
  2849  042C  0CAF               	rrf	??___fttol+1,f
  2850  042D  0CAE               	rrf	??___fttol,f
  2851  042E  3EFF               	addlw	-1
  2852  042F  1D03               	skipz
  2853  0430  2C2A               	goto	u192_25
  2854  0431  082E               	movf	??___fttol,w
  2855  0432  00B1               	movwf	??___fttol+3
  2856  0433  0831               	movf	??___fttol+3,w
  2857  0434  00B2               	movwf	___fttol@sign1
  2858  0435  17AB               	bsf	___fttol@f1+1,7
  2859  0436  30FF               	movlw	255
  2860  0437  05AA               	andwf	___fttol@f1,f
  2861  0438  30FF               	movlw	255
  2862  0439  05AB               	andwf	___fttol@f1+1,f
  2863  043A  3000               	movlw	0
  2864  043B  05AC               	andwf	___fttol@f1+2,f
  2865  043C  082A               	movf	___fttol@f1,w
  2866  043D  00B3               	movwf	___fttol@lval
  2867  043E  082B               	movf	___fttol@f1+1,w
  2868  043F  00B4               	movwf	___fttol@lval+1
  2869  0440  082C               	movf	___fttol@f1+2,w
  2870  0441  00B5               	movwf	___fttol@lval+2
  2871  0442  01B6               	clrf	___fttol@lval+3
  2872  0443  308E               	movlw	142
  2873  0444  02B7               	subwf	___fttol@exp1,f
  2874  0445  1FB7               	btfss	___fttol@exp1,7
  2875  0446  2C65               	goto	i1l1451
  2876  0447  0837               	movf	___fttol@exp1,w
  2877  0448  3A80               	xorlw	128
  2878  0449  3E8F               	addlw	143
  2879  044A  1803               	skipnc
  2880  044B  2C55               	goto	i1l1449
  2881  044C  3000               	movlw	0
  2882  044D  00AD               	movwf	?___fttol+3
  2883  044E  3000               	movlw	0
  2884  044F  00AC               	movwf	?___fttol+2
  2885  0450  3000               	movlw	0
  2886  0451  00AB               	movwf	?___fttol+1
  2887  0452  3000               	movlw	0
  2888  0453  00AA               	movwf	?___fttol
  2889  0454  0008               	return
  2890  0455                     i1l1449:	
  2891  0455  3001               	movlw	1
  2892  0456                     u195_25:	
  2893  0456  1003               	clrc
  2894  0457  0CB6               	rrf	___fttol@lval+3,f
  2895  0458  0CB5               	rrf	___fttol@lval+2,f
  2896  0459  0CB4               	rrf	___fttol@lval+1,f
  2897  045A  0CB3               	rrf	___fttol@lval,f
  2898  045B  3EFF               	addlw	-1
  2899  045C  1D03               	skipz
  2900  045D  2C56               	goto	u195_25
  2901  045E  3001               	movlw	1
  2902  045F  00AE               	movwf	??___fttol
  2903  0460  082E               	movf	??___fttol,w
  2904  0461  07B7               	addwf	___fttol@exp1,f
  2905  0462  1903               	btfsc	3,2
  2906  0463  2C80               	goto	i1l1459
  2907  0464  2C55               	goto	i1l1449
  2908  0465                     i1l1451:	
  2909  0465  3018               	movlw	24
  2910  0466  0237               	subwf	___fttol@exp1,w
  2911  0467  1C03               	skipc
  2912  0468  2C7D               	goto	i1l417
  2913  0469  3000               	movlw	0
  2914  046A  00AD               	movwf	?___fttol+3
  2915  046B  3000               	movlw	0
  2916  046C  00AC               	movwf	?___fttol+2
  2917  046D  3000               	movlw	0
  2918  046E  00AB               	movwf	?___fttol+1
  2919  046F  3000               	movlw	0
  2920  0470  00AA               	movwf	?___fttol
  2921  0471  0008               	return
  2922  0472                     i1l1457:	
  2923  0472  3001               	movlw	1
  2924  0473  00AE               	movwf	??___fttol
  2925  0474                     u198_25:	
  2926  0474  1003               	clrc
  2927  0475  0DB3               	rlf	___fttol@lval,f
  2928  0476  0DB4               	rlf	___fttol@lval+1,f
  2929  0477  0DB5               	rlf	___fttol@lval+2,f
  2930  0478  0DB6               	rlf	___fttol@lval+3,f
  2931  0479  0BAE               	decfsz	??___fttol,f
  2932  047A  2C74               	goto	u198_25
  2933  047B  3001               	movlw	1
  2934  047C  02B7               	subwf	___fttol@exp1,f
  2935  047D                     i1l417:	
  2936  047D  0837               	movf	___fttol@exp1,w
  2937  047E  1D03               	btfss	3,2
  2938  047F  2C72               	goto	i1l1457
  2939  0480                     i1l1459:	
  2940  0480  0832               	movf	___fttol@sign1,w
  2941  0481  1903               	btfsc	3,2
  2942  0482  2C8E               	goto	i1l1463
  2943  0483  09B3               	comf	___fttol@lval,f
  2944  0484  09B4               	comf	___fttol@lval+1,f
  2945  0485  09B5               	comf	___fttol@lval+2,f
  2946  0486  09B6               	comf	___fttol@lval+3,f
  2947  0487  0AB3               	incf	___fttol@lval,f
  2948  0488  1903               	skipnz
  2949  0489  0AB4               	incf	___fttol@lval+1,f
  2950  048A  1903               	skipnz
  2951  048B  0AB5               	incf	___fttol@lval+2,f
  2952  048C  1903               	skipnz
  2953  048D  0AB6               	incf	___fttol@lval+3,f
  2954  048E                     i1l1463:	
  2955  048E  0836               	movf	___fttol@lval+3,w
  2956  048F  00AD               	movwf	?___fttol+3
  2957  0490  0835               	movf	___fttol@lval+2,w
  2958  0491  00AC               	movwf	?___fttol+2
  2959  0492  0834               	movf	___fttol@lval+1,w
  2960  0493  00AB               	movwf	?___fttol+1
  2961  0494  0833               	movf	___fttol@lval,w
  2962  0495  00AA               	movwf	?___fttol
  2963  0496  0008               	return
  2964  0497                     __end_of___fttol:	
  2965                           
  2966                           	psect	text13
  2967  0571                     __ptext13:	
  2968 ;; *************** function ___ftge *****************
  2969 ;; Defined at:
  2970 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\ftge.c"
  2971 ;; Parameters:    Size  Location     Type
  2972 ;;  ff1             3    0[COMMON] float 
  2973 ;;  ff2             3    3[COMMON] float 
  2974 ;; Auto vars:     Size  Location     Type
  2975 ;;		None
  2976 ;; Return value:  Size  Location     Type
  2977 ;;		None               void
  2978 ;; Registers used:
  2979 ;;		wreg, status,2, status,0
  2980 ;; Tracked objects:
  2981 ;;		On entry : 0/0
  2982 ;;		On exit  : 0/0
  2983 ;;		Unchanged: 0/0
  2984 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2985 ;;      Params:         6       0       0       0
  2986 ;;      Locals:         0       0       0       0
  2987 ;;      Temps:          6       0       0       0
  2988 ;;      Totals:        12       0       0       0
  2989 ;;Total ram usage:       12 bytes
  2990 ;; Hardware stack levels used:    1
  2991 ;; This function calls:
  2992 ;;		Nothing
  2993 ;; This function is called by:
  2994 ;;		_Interrupt
  2995 ;; This function uses a non-reentrant model
  2996 ;;
  2997                           
  2998                           
  2999                           ;psect for function ___ftge
  3000  0571                     ___ftge:	
  3001                           
  3002                           ;incstack = 0
  3003                           ; Regs used in ___ftge: [wreg+status,2+status,0]
  3004  0571  1FF2               	btfss	___ftge@ff1+2,7
  3005  0572  2D98               	goto	i1l1409
  3006  0573  3000               	movlw	0
  3007  0574  00F6               	movwf	??___ftge
  3008  0575  3000               	movlw	0
  3009  0576  00F7               	movwf	??___ftge+1
  3010  0577  3080               	movlw	128
  3011  0578  00F8               	movwf	??___ftge+2
  3012  0579  0970               	comf	___ftge@ff1,w
  3013  057A  00F9               	movwf	??___ftge+3
  3014  057B  0971               	comf	___ftge@ff1+1,w
  3015  057C  00FA               	movwf	??___ftge+4
  3016  057D  0972               	comf	___ftge@ff1+2,w
  3017  057E  00FB               	movwf	??___ftge+5
  3018  057F  0AF9               	incf	??___ftge+3,f
  3019  0580  1903               	skipnz
  3020  0581  0AFA               	incf	??___ftge+4,f
  3021  0582  1903               	skipnz
  3022  0583  0AFB               	incf	??___ftge+5,f
  3023  0584  0879               	movf	??___ftge+3,w
  3024  0585  07F6               	addwf	??___ftge,f
  3025  0586  087A               	movf	??___ftge+4,w
  3026  0587  1803               	skipnc
  3027  0588  0F7A               	incfsz	??___ftge+4,w
  3028  0589  2D8B               	goto	u187_21
  3029  058A  2D8C               	goto	u187_22
  3030  058B                     u187_21:	
  3031  058B  07F7               	addwf	??___ftge+1,f
  3032  058C                     u187_22:	
  3033  058C  087B               	movf	??___ftge+5,w
  3034  058D  1803               	skipnc
  3035  058E  0F7B               	incfsz	??___ftge+5,w
  3036  058F  2D91               	goto	u187_23
  3037  0590  2D92               	goto	u187_24
  3038  0591                     u187_23:	
  3039  0591  07F8               	addwf	??___ftge+2,f
  3040  0592                     u187_24:	
  3041  0592  0876               	movf	??___ftge,w
  3042  0593  00F0               	movwf	___ftge@ff1
  3043  0594  0877               	movf	??___ftge+1,w
  3044  0595  00F1               	movwf	___ftge@ff1+1
  3045  0596  0878               	movf	??___ftge+2,w
  3046  0597  00F2               	movwf	___ftge@ff1+2
  3047  0598                     i1l1409:	
  3048  0598  1FF5               	btfss	___ftge@ff2+2,7
  3049  0599  2DBF               	goto	i1l1413
  3050  059A  3000               	movlw	0
  3051  059B  00F6               	movwf	??___ftge
  3052  059C  3000               	movlw	0
  3053  059D  00F7               	movwf	??___ftge+1
  3054  059E  3080               	movlw	128
  3055  059F  00F8               	movwf	??___ftge+2
  3056  05A0  0973               	comf	___ftge@ff2,w
  3057  05A1  00F9               	movwf	??___ftge+3
  3058  05A2  0974               	comf	___ftge@ff2+1,w
  3059  05A3  00FA               	movwf	??___ftge+4
  3060  05A4  0975               	comf	___ftge@ff2+2,w
  3061  05A5  00FB               	movwf	??___ftge+5
  3062  05A6  0AF9               	incf	??___ftge+3,f
  3063  05A7  1903               	skipnz
  3064  05A8  0AFA               	incf	??___ftge+4,f
  3065  05A9  1903               	skipnz
  3066  05AA  0AFB               	incf	??___ftge+5,f
  3067  05AB  0879               	movf	??___ftge+3,w
  3068  05AC  07F6               	addwf	??___ftge,f
  3069  05AD  087A               	movf	??___ftge+4,w
  3070  05AE  1803               	skipnc
  3071  05AF  0F7A               	incfsz	??___ftge+4,w
  3072  05B0  2DB2               	goto	u189_21
  3073  05B1  2DB3               	goto	u189_22
  3074  05B2                     u189_21:	
  3075  05B2  07F7               	addwf	??___ftge+1,f
  3076  05B3                     u189_22:	
  3077  05B3  087B               	movf	??___ftge+5,w
  3078  05B4  1803               	skipnc
  3079  05B5  0F7B               	incfsz	??___ftge+5,w
  3080  05B6  2DB8               	goto	u189_23
  3081  05B7  2DB9               	goto	u189_24
  3082  05B8                     u189_23:	
  3083  05B8  07F8               	addwf	??___ftge+2,f
  3084  05B9                     u189_24:	
  3085  05B9  0876               	movf	??___ftge,w
  3086  05BA  00F3               	movwf	___ftge@ff2
  3087  05BB  0877               	movf	??___ftge+1,w
  3088  05BC  00F4               	movwf	___ftge@ff2+1
  3089  05BD  0878               	movf	??___ftge+2,w
  3090  05BE  00F5               	movwf	___ftge@ff2+2
  3091  05BF                     i1l1413:	
  3092  05BF  3080               	movlw	128
  3093  05C0  06F2               	xorwf	___ftge@ff1+2,f
  3094  05C1  3080               	movlw	128
  3095  05C2  06F5               	xorwf	___ftge@ff2+2,f
  3096  05C3  0875               	movf	___ftge@ff2+2,w
  3097  05C4  0272               	subwf	___ftge@ff1+2,w
  3098  05C5  1D03               	skipz
  3099  05C6  0008               	return
  3100  05C7  0874               	movf	___ftge@ff2+1,w
  3101  05C8  0271               	subwf	___ftge@ff1+1,w
  3102  05C9  1D03               	skipz
  3103  05CA  0008               	return
  3104  05CB  0873               	movf	___ftge@ff2,w
  3105  05CC  0270               	subwf	___ftge@ff1,w
  3106  05CD  0008               	return
  3107  05CE                     __end_of___ftge:	
  3108                           
  3109                           	psect	text14
  3110  0629                     __ptext14:	
  3111 ;; *************** function ___awmod *****************
  3112 ;; Defined at:
  3113 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\awmod.c"
  3114 ;; Parameters:    Size  Location     Type
  3115 ;;  divisor         2    0[COMMON] int 
  3116 ;;  dividend        2    2[COMMON] int 
  3117 ;; Auto vars:     Size  Location     Type
  3118 ;;  sign            1    6[COMMON] unsigned char 
  3119 ;;  counter         1    5[COMMON] unsigned char 
  3120 ;; Return value:  Size  Location     Type
  3121 ;;                  2    0[COMMON] int 
  3122 ;; Registers used:
  3123 ;;		wreg, status,2, status,0
  3124 ;; Tracked objects:
  3125 ;;		On entry : 0/0
  3126 ;;		On exit  : 0/0
  3127 ;;		Unchanged: 0/0
  3128 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3129 ;;      Params:         4       0       0       0
  3130 ;;      Locals:         2       0       0       0
  3131 ;;      Temps:          1       0       0       0
  3132 ;;      Totals:         7       0       0       0
  3133 ;;Total ram usage:        7 bytes
  3134 ;; Hardware stack levels used:    1
  3135 ;; This function calls:
  3136 ;;		Nothing
  3137 ;; This function is called by:
  3138 ;;		_Interrupt
  3139 ;; This function uses a non-reentrant model
  3140 ;;
  3141                           
  3142                           
  3143                           ;psect for function ___awmod
  3144  0629                     ___awmod:	
  3145                           
  3146                           ;incstack = 0
  3147                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  3148  0629  01F6               	clrf	___awmod@sign
  3149  062A  1FF3               	btfss	___awmod@dividend+1,7
  3150  062B  2E33               	goto	i1l1375
  3151  062C  09F2               	comf	___awmod@dividend,f
  3152  062D  09F3               	comf	___awmod@dividend+1,f
  3153  062E  0AF2               	incf	___awmod@dividend,f
  3154  062F  1903               	skipnz
  3155  0630  0AF3               	incf	___awmod@dividend+1,f
  3156  0631  01F6               	clrf	___awmod@sign
  3157  0632  0AF6               	incf	___awmod@sign,f
  3158  0633                     i1l1375:	
  3159  0633  1FF1               	btfss	___awmod@divisor+1,7
  3160  0634  2E3A               	goto	i1l1379
  3161  0635  09F0               	comf	___awmod@divisor,f
  3162  0636  09F1               	comf	___awmod@divisor+1,f
  3163  0637  0AF0               	incf	___awmod@divisor,f
  3164  0638  1903               	skipnz
  3165  0639  0AF1               	incf	___awmod@divisor+1,f
  3166  063A                     i1l1379:	
  3167  063A  0870               	movf	___awmod@divisor,w
  3168  063B  0471               	iorwf	___awmod@divisor+1,w
  3169  063C  1903               	btfsc	3,2
  3170  063D  2E67               	goto	i1l1397
  3171  063E  01F5               	clrf	___awmod@counter
  3172  063F  0AF5               	incf	___awmod@counter,f
  3173  0640                     i1l1387:	
  3174  0640  1BF1               	btfsc	___awmod@divisor+1,7
  3175  0641  2E4E               	goto	i1l1389
  3176  0642  3001               	movlw	1
  3177  0643                     u180_25:	
  3178  0643  1003               	clrc
  3179  0644  0DF0               	rlf	___awmod@divisor,f
  3180  0645  0DF1               	rlf	___awmod@divisor+1,f
  3181  0646  3EFF               	addlw	-1
  3182  0647  1D03               	skipz
  3183  0648  2E43               	goto	u180_25
  3184  0649  3001               	movlw	1
  3185  064A  00F4               	movwf	??___awmod
  3186  064B  0874               	movf	??___awmod,w
  3187  064C  07F5               	addwf	___awmod@counter,f
  3188  064D  2E40               	goto	i1l1387
  3189  064E                     i1l1389:	
  3190  064E  0871               	movf	___awmod@divisor+1,w
  3191  064F  0273               	subwf	___awmod@dividend+1,w
  3192  0650  1D03               	skipz
  3193  0651  2E54               	goto	u182_25
  3194  0652  0870               	movf	___awmod@divisor,w
  3195  0653  0272               	subwf	___awmod@dividend,w
  3196  0654                     u182_25:	
  3197  0654  1C03               	skipc
  3198  0655  2E5C               	goto	i1l1393
  3199  0656  0870               	movf	___awmod@divisor,w
  3200  0657  02F2               	subwf	___awmod@dividend,f
  3201  0658  0871               	movf	___awmod@divisor+1,w
  3202  0659  1C03               	skipc
  3203  065A  03F3               	decf	___awmod@dividend+1,f
  3204  065B  02F3               	subwf	___awmod@dividend+1,f
  3205  065C                     i1l1393:	
  3206  065C  3001               	movlw	1
  3207  065D                     u183_25:	
  3208  065D  1003               	clrc
  3209  065E  0CF1               	rrf	___awmod@divisor+1,f
  3210  065F  0CF0               	rrf	___awmod@divisor,f
  3211  0660  3EFF               	addlw	-1
  3212  0661  1D03               	skipz
  3213  0662  2E5D               	goto	u183_25
  3214  0663  3001               	movlw	1
  3215  0664  02F5               	subwf	___awmod@counter,f
  3216  0665  1D03               	btfss	3,2
  3217  0666  2E4E               	goto	i1l1389
  3218  0667                     i1l1397:	
  3219  0667  0876               	movf	___awmod@sign,w
  3220  0668  1903               	btfsc	3,2
  3221  0669  2E6F               	goto	i1l1401
  3222  066A  09F2               	comf	___awmod@dividend,f
  3223  066B  09F3               	comf	___awmod@dividend+1,f
  3224  066C  0AF2               	incf	___awmod@dividend,f
  3225  066D  1903               	skipnz
  3226  066E  0AF3               	incf	___awmod@dividend+1,f
  3227  066F                     i1l1401:	
  3228  066F  0873               	movf	___awmod@dividend+1,w
  3229  0670  00F1               	movwf	?___awmod+1
  3230  0671  0872               	movf	___awmod@dividend,w
  3231  0672  00F0               	movwf	?___awmod
  3232  0673  0008               	return
  3233  0674                     __end_of___awmod:	
  3234                           
  3235                           	psect	text15
  3236  05CE                     __ptext15:	
  3237 ;; *************** function ___awdiv *****************
  3238 ;; Defined at:
  3239 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\awdiv.c"
  3240 ;; Parameters:    Size  Location     Type
  3241 ;;  divisor         2    7[COMMON] int 
  3242 ;;  dividend        2    9[COMMON] int 
  3243 ;; Auto vars:     Size  Location     Type
  3244 ;;  quotient        2    2[BANK0 ] int 
  3245 ;;  sign            1    1[BANK0 ] unsigned char 
  3246 ;;  counter         1    0[BANK0 ] unsigned char 
  3247 ;; Return value:  Size  Location     Type
  3248 ;;                  2    7[COMMON] int 
  3249 ;; Registers used:
  3250 ;;		wreg, status,2, status,0
  3251 ;; Tracked objects:
  3252 ;;		On entry : 0/0
  3253 ;;		On exit  : 0/0
  3254 ;;		Unchanged: 0/0
  3255 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3256 ;;      Params:         4       0       0       0
  3257 ;;      Locals:         0       4       0       0
  3258 ;;      Temps:          1       0       0       0
  3259 ;;      Totals:         5       4       0       0
  3260 ;;Total ram usage:        9 bytes
  3261 ;; Hardware stack levels used:    1
  3262 ;; This function calls:
  3263 ;;		Nothing
  3264 ;; This function is called by:
  3265 ;;		_Interrupt
  3266 ;; This function uses a non-reentrant model
  3267 ;;
  3268                           
  3269                           
  3270                           ;psect for function ___awdiv
  3271  05CE                     ___awdiv:	
  3272                           
  3273                           ;incstack = 0
  3274                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  3275  05CE  1283               	bcf	3,5	;RP0=0, select bank0
  3276  05CF  1303               	bcf	3,6	;RP1=0, select bank0
  3277  05D0  01A1               	clrf	___awdiv@sign
  3278  05D1  1FF8               	btfss	___awdiv@divisor+1,7
  3279  05D2  2DDA               	goto	i1l1331
  3280  05D3  09F7               	comf	___awdiv@divisor,f
  3281  05D4  09F8               	comf	___awdiv@divisor+1,f
  3282  05D5  0AF7               	incf	___awdiv@divisor,f
  3283  05D6  1903               	skipnz
  3284  05D7  0AF8               	incf	___awdiv@divisor+1,f
  3285  05D8  01A1               	clrf	___awdiv@sign
  3286  05D9  0AA1               	incf	___awdiv@sign,f
  3287  05DA                     i1l1331:	
  3288  05DA  1FFA               	btfss	___awdiv@dividend+1,7
  3289  05DB  2DE5               	goto	i1l1337
  3290  05DC  09F9               	comf	___awdiv@dividend,f
  3291  05DD  09FA               	comf	___awdiv@dividend+1,f
  3292  05DE  0AF9               	incf	___awdiv@dividend,f
  3293  05DF  1903               	skipnz
  3294  05E0  0AFA               	incf	___awdiv@dividend+1,f
  3295  05E1  3001               	movlw	1
  3296  05E2  00FB               	movwf	??___awdiv
  3297  05E3  087B               	movf	??___awdiv,w
  3298  05E4  06A1               	xorwf	___awdiv@sign,f
  3299  05E5                     i1l1337:	
  3300  05E5  01A2               	clrf	___awdiv@quotient
  3301  05E6  01A3               	clrf	___awdiv@quotient+1
  3302  05E7  0877               	movf	___awdiv@divisor,w
  3303  05E8  0478               	iorwf	___awdiv@divisor+1,w
  3304  05E9  1903               	btfsc	3,2
  3305  05EA  2E1C               	goto	i1l1359
  3306  05EB  01A0               	clrf	___awdiv@counter
  3307  05EC  0AA0               	incf	___awdiv@counter,f
  3308  05ED                     i1l1347:	
  3309  05ED  1BF8               	btfsc	___awdiv@divisor+1,7
  3310  05EE  2DFB               	goto	i1l1349
  3311  05EF  3001               	movlw	1
  3312  05F0                     u170_25:	
  3313  05F0  1003               	clrc
  3314  05F1  0DF7               	rlf	___awdiv@divisor,f
  3315  05F2  0DF8               	rlf	___awdiv@divisor+1,f
  3316  05F3  3EFF               	addlw	-1
  3317  05F4  1D03               	skipz
  3318  05F5  2DF0               	goto	u170_25
  3319  05F6  3001               	movlw	1
  3320  05F7  00FB               	movwf	??___awdiv
  3321  05F8  087B               	movf	??___awdiv,w
  3322  05F9  07A0               	addwf	___awdiv@counter,f
  3323  05FA  2DED               	goto	i1l1347
  3324  05FB                     i1l1349:	
  3325  05FB  3001               	movlw	1
  3326  05FC                     u172_25:	
  3327  05FC  1003               	clrc
  3328  05FD  0DA2               	rlf	___awdiv@quotient,f
  3329  05FE  0DA3               	rlf	___awdiv@quotient+1,f
  3330  05FF  3EFF               	addlw	-1
  3331  0600  1D03               	skipz
  3332  0601  2DFC               	goto	u172_25
  3333  0602  0878               	movf	___awdiv@divisor+1,w
  3334  0603  027A               	subwf	___awdiv@dividend+1,w
  3335  0604  1D03               	skipz
  3336  0605  2E08               	goto	u173_25
  3337  0606  0877               	movf	___awdiv@divisor,w
  3338  0607  0279               	subwf	___awdiv@dividend,w
  3339  0608                     u173_25:	
  3340  0608  1C03               	skipc
  3341  0609  2E11               	goto	i1l1355
  3342  060A  0877               	movf	___awdiv@divisor,w
  3343  060B  02F9               	subwf	___awdiv@dividend,f
  3344  060C  0878               	movf	___awdiv@divisor+1,w
  3345  060D  1C03               	skipc
  3346  060E  03FA               	decf	___awdiv@dividend+1,f
  3347  060F  02FA               	subwf	___awdiv@dividend+1,f
  3348  0610  1422               	bsf	___awdiv@quotient,0
  3349  0611                     i1l1355:	
  3350  0611  3001               	movlw	1
  3351  0612                     u174_25:	
  3352  0612  1003               	clrc
  3353  0613  0CF8               	rrf	___awdiv@divisor+1,f
  3354  0614  0CF7               	rrf	___awdiv@divisor,f
  3355  0615  3EFF               	addlw	-1
  3356  0616  1D03               	skipz
  3357  0617  2E12               	goto	u174_25
  3358  0618  3001               	movlw	1
  3359  0619  02A0               	subwf	___awdiv@counter,f
  3360  061A  1D03               	btfss	3,2
  3361  061B  2DFB               	goto	i1l1349
  3362  061C                     i1l1359:	
  3363  061C  0821               	movf	___awdiv@sign,w
  3364  061D  1903               	btfsc	3,2
  3365  061E  2E24               	goto	i1l1363
  3366  061F  09A2               	comf	___awdiv@quotient,f
  3367  0620  09A3               	comf	___awdiv@quotient+1,f
  3368  0621  0AA2               	incf	___awdiv@quotient,f
  3369  0622  1903               	skipnz
  3370  0623  0AA3               	incf	___awdiv@quotient+1,f
  3371  0624                     i1l1363:	
  3372  0624  0823               	movf	___awdiv@quotient+1,w
  3373  0625  00F8               	movwf	?___awdiv+1
  3374  0626  0822               	movf	___awdiv@quotient,w
  3375  0627  00F7               	movwf	?___awdiv
  3376  0628  0008               	return
  3377  0629                     __end_of___awdiv:	
  3378  007E                     btemp	set	126	;btemp
  3379  007E                     wtemp	set	126
  3380  007E                     wtemp0	set	126
  3381  0080                     wtemp1	set	128
  3382  0082                     wtemp2	set	130
  3383  0084                     wtemp3	set	132
  3384  0086                     wtemp4	set	134
  3385  0088                     wtemp5	set	136
  3386  007F                     wtemp6	set	127
  3387  007E                     ttemp	set	126
  3388  007E                     ttemp0	set	126
  3389  0081                     ttemp1	set	129
  3390  0084                     ttemp2	set	132
  3391  0087                     ttemp3	set	135
  3392  007F                     ttemp4	set	127
  3393  007E                     ltemp	set	126
  3394  007E                     ltemp0	set	126
  3395  0082                     ltemp1	set	130
  3396  0086                     ltemp2	set	134
  3397  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    0
    Data        21
    BSS         4
    Persistent  3
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     54      62
    BANK1            80     63      63
    BANK2            48      0      20

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _Interrupt in COMMON

    _Interrupt->i1___ftmul
    i1___ftmul->i1___ftpack
    ___fttol->i1___ftmul
    ___awdiv->___awmod

Critical Paths under _main in BANK0

    None.

Critical Paths under _Interrupt in BANK0

    _Interrupt->___fttol
    ___fttol->i1___ftmul

Critical Paths under _main in BANK1

    _main->_readADC
    _readADC->___ftmul
    _averageADC->___ftdiv
    ___lbtoft->___ftpack
    ___ftdiv->___lbtoft
    ___awtoft->___ftpack
    ___ftmul->_averageADC

Critical Paths under _Interrupt in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Interrupt in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   10432
                            _readADC
 ---------------------------------------------------------------------------------
 (1) _readADC                                              6     3      3   10432
                                             57 BANK1      6     3      3
                            ___ftdiv
                            ___ftmul
                         _averageADC
 ---------------------------------------------------------------------------------
 (2) _averageADC                                           9     6      3    5963
                                             32 BANK1      9     6      3
                           ___awtoft
                            ___ftdiv
                           ___lbtoft
                         _readSerial
 ---------------------------------------------------------------------------------
 (3) _readSerial                                           5     5      0      92
                                              0 BANK1      5     5      0
 ---------------------------------------------------------------------------------
 (3) ___lbtoft                                             8     5      3    1729
                                              8 BANK1      8     5      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___ftdiv                                             16    10      6    2199
                                             16 BANK1     16    10      6
                           ___awtoft (ARG)
                           ___ftpack
                           ___ftpack (ARG)
                           ___lbtoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___awtoft                                             6     3      3    1851
                                              8 BANK1      6     3      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___ftmul                                             16    10      6    2247
                                             41 BANK1     16    10      6
                            ___ftdiv (ARG)
                           ___ftpack
                         _averageADC (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftpack                                             8     3      5    1707
                                              0 BANK1      8     3      5
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _Interrupt                                           30    30      0    3524
                                             24 BANK0     30    30      0
                            ___awdiv
                            ___awmod
                             ___ftge
                            ___fttol
                          i1___ftmul
 ---------------------------------------------------------------------------------
 (6) i1___ftmul                                           16    10      6     739
                                              8 COMMON     6     0      6
                                              0 BANK0     10    10      0
                         i1___ftpack
 ---------------------------------------------------------------------------------
 (7) i1___ftpack                                           8     3      5     309
                                              0 COMMON     8     3      5
 ---------------------------------------------------------------------------------
 (6) ___fttol                                             14    10      4     358
                                             10 BANK0     14    10      4
                          i1___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___ftge                                              12     6      6     242
                                              0 COMMON    12     6      6
 ---------------------------------------------------------------------------------
 (6) ___awmod                                              7     3      4     932
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (6) ___awdiv                                              9     5      4     936
                                              7 COMMON     5     1      4
                                              0 BANK0      4     4      0
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _readADC
     ___ftdiv
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
       ___ftpack (ARG)
       ___lbtoft (ARG)
         ___ftpack
     ___ftmul
       ___ftdiv (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
       ___ftpack (ARG)
       _averageADC (ARG)
         ___awtoft
           ___ftpack
         ___ftdiv
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___lbtoft
           ___ftpack
         _readSerial
     _averageADC
       ___awtoft
         ___ftpack
       ___ftdiv
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
       ___lbtoft
         ___ftpack
       _readSerial

 _Interrupt (ROOT)
   ___awdiv
     ___awmod (ARG)
   ___awmod
   ___ftge
   ___fttol
     i1___ftmul (ARG)
       i1___ftpack
   i1___ftmul
     i1___ftpack

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               30      0      14       9       41.7%
BITBANK2            30      0       0       8        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50     3F      3F       7       78.8%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     36      3E       3       77.5%
BITBANK0            50      0       0       5        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      9F      10        0.0%
ABS                  0      0      9F       4        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA              80      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.37 build -260352376 
Symbol Table                                                                                   Sat Jun 11 14:06:56 2016

             i1___ftpack 0505              __CFG_CP$OFF 0000             ___awdiv@sign 0021  
                    l333 04E4                      l334 04EC                      l326 04CF  
            averageADC@i 00C7                      _RA0 0028                      _RA1 0029  
                    _RA2 002A                      _RA3 002B                      _RA6 002E  
                    _RA7 002F             __CFG_CPD$OFF 0000                      _cen 0056  
                    _dez 0058                      fsr0 0004                      _uni 0059  
                    indf 0000             ___awmod@sign 0076             i1___ftmul@f1 0078  
           i1___ftmul@f2 007B             __CFG_LVP$OFF 0000             ___ftdiv@cntr 00BA  
           ___ftdiv@sign 00BF                     l1111 04B4                     l1121 04DE  
                   l1113 04B9                     l1105 04A1                     l1109 04A8  
                   l1213 03E5                     l1205 03C6                     l1119 04D4  
                   l1231 067A                     l1233 068E                     l1243 01CB  
                   l1163 06E7                     l1261 0220                     l1149 06C2  
                   l1175 0754                     l1191 0381                     l1273 0248  
                   l1265 0230                     l1249 01E1                     l1185 036B  
                   l1277 0258                     u1205 04C8                     u1225 04D7  
                   u1265 04F3                     u1185 04AD                     u1345 0393  
                   u1435 01ED                     u1355 03A5                     u1525 0259  
                   u1445 01FF                     u1365 03C7                     u1294 06CE  
                   u1535 0261                     u1375 03D8                     u1295 06CC  
                   u1385 03E6                     u1475 0231                     u1485 0239  
                   i1l50 0094                     i1l52 00BD                     i1l61 01A8  
                   i1l56 0133                     i1l58 0162                     _TMR0 0001  
                   _main 071A             ___ftpack@arg 00A0             ___ftpack@exp 00A3  
                   btemp 007E            __CFG_BOREN$ON 0000                     ltemp 007E  
                   start 0010                     ttemp 007E                     wtemp 007E  
           ___ftmul@cntr 00D7             ___ftmul@sign 00D8            i1___ftmul@exp 0024  
           ___fttol@exp1 0037             ___fttol@lval 0033  i1___ftmul@f3_as_product 0025  
                  ?_main 0070          __end_of___awdiv 0629            __CFG_WDTE$OFF 0000  
        __end_of___awmod 0674          __end_of___ftdiv 0409                    _CMCON 001F  
        __end_of___ftmul 0284          ___awdiv@divisor 0077          __end_of___fttol 0497  
                  i1l333 0550                    i1l334 0558                    i1l326 053B  
                  i1l417 047D            averageADC@qnt 00C8          ___awdiv@counter 0020  
                  _PORTB 0006                    _TRISA 0085                    _TRISB 0086  
          __CFG_PWRTE$ON 0000          __end_of_readADC 071A            ___awtoft@sign 00AD  
          ___ftpack@sign 00A4                    _value 005A                    pclath 000A  
                  ltemp0 007E                    ltemp1 0082                    ltemp2 0086  
                  ltemp3 0080                    ttemp0 007E                    ttemp1 0081  
                  ttemp2 0084                    ttemp3 0087                    ttemp4 007F  
                  status 0003                    wtemp0 007E                    wtemp1 0080  
                  wtemp2 0082                    wtemp3 0084                    wtemp4 0086  
                  wtemp5 0088                    wtemp6 007F       __size_ofi1___ftmul 00CF  
         i1___ftpack@arg 0070           i1___ftpack@exp 0073           __CFG_MCLRE$OFF 0000  
        __initialization 0011             __end_of_main 0748              ?i1___ftpack 0070  
         i1___ftmul@cntr 0028           i1___ftmul@sign 0029                   ??_main 00DF  
          ___fttol@sign1 0032         ___awdiv@dividend 0079         __end_of___awtoft 076B  
       __end_of___ftpack 0505         __end_of___lbtoft 0787                   i1l1401 066F  
                 i1l1305 0540                   i1l1331 05DA                   i1l1307 054A  
                 i1l1413 05BF                   i1l1431 0423                   i1l1503 0319  
                 i1l1337 05E5                   i1l1409 0598                   i1l1363 0624  
                 i1l1355 0611                   i1l1347 05ED                   i1l1451 0465  
                 i1l1291 050D                   i1l1507 0329                   i1l1349 05FB  
                 i1l1359 061C                   i1l1375 0633                   i1l1463 048E  
                 i1l1295 0514                   i1l1615 01A2                   i1l1393 065C  
                 i1l1457 0472                   i1l1449 0455                   i1l1297 0520  
                 i1l1473 029C                   i1l1387 0640                   i1l1379 063A  
                 i1l1459 0480                   i1l1299 0525                   i1l1491 02F1  
                 i1l1571 00F6                   i1l1389 064E                   i1l1397 0667  
                 i1l1495 0301                   i1l1479 02B2                   u203_25 02BE  
                 u212_25 032A                   u204_25 02D0                   u213_25 0332  
                 u215_20 004D                   u207_25 0302                   u208_25 030A  
                 u161_25 0543                   u170_25 05F0                   u172_25 05FC  
                 u180_25 0643                   u173_25 0608                   u165_25 055F  
                 u157_25 0519                   u174_25 0612                   u182_25 0654  
                 u183_25 065D                   u159_25 0534                   u192_25 042A  
                 u187_21 058B                   u187_22 058C                   u187_23 0591  
                 u187_24 0592                   u195_25 0456                   u189_21 05B2  
                 u189_22 05B3                   u189_23 05B8                   u189_24 05B9  
                 u198_25 0474       __size_of_Interrupt 016E                   ___ftge 0571  
              ??___awdiv 007B                ??___awmod 0074                ??___ftdiv 00B6  
              ??___ftmul 00CF                ??___fttol 002E              readSerial@i 00A3  
       ___awdiv@quotient 0022          ___awmod@divisor 0070          ___awmod@counter 0075  
  ___ftmul@f3_as_product 00D4                ??_readADC 00DC        __end_ofi1___ftmul 0353  
                 saved_w 007E      __size_ofi1___ftpack 006C  __end_of__initialization 0043  
             ___ftge@ff1 0070               ___ftge@ff2 0073          i1___ftpack@sign 0074  
             ___ftdiv@f1 00B3               ___ftdiv@f2 00B0               ___ftdiv@f3 00BB  
      Interrupt@segments 0040               ___awtoft@c 00A8               ___lbtoft@c 00AF  
             ___ftmul@f1 00C9               ___ftmul@f2 00CC               ___fttol@f1 002A  
         __pcstackCOMMON 0070             __pidataBANK0 079B             __pidataBANK2 0787  
         _OPTION_REGbits 0081        __end_of_Interrupt 01B3               __pbssBANK0 0056  
             __pmaintext 071A                  ?___ftge 0070               __pintentry 0004  
              ?___awtoft 00A8                ?___ftpack 00A0                ?___lbtoft 00A8  
             _averageADC 0674          __size_of___ftge 005D             ??i1___ftpack 0075  
                ___awdiv 05CE                  ___awmod 0629                  ___ftdiv 0353  
                ___ftmul 01B3                  ___fttol 0409               _readSerial 06AF  
             ??___awtoft 00AB               ??___ftpack 00A5               ??___lbtoft 00AB  
                __ptext1 06E9                  __ptext2 0674                  __ptext3 06AF  
                __ptext4 076B                  __ptext5 0353                  __ptext6 0748  
                __ptext7 01B3                  __ptext8 0497                  __ptext9 0045  
                _readADC 06E9                  _counter 0057         ___awmod@dividend 0072  
   end_of_initialization 0043       __end_ofi1___ftpack 0571              ?_averageADC 00C0  
              i1___ftmul 0284              ___ftdiv@exp 00BE              ___ftmul@exp 00D3  
            ?_readSerial 0070           __end_of___ftge 05CE      start_initialization 0011  
        Interrupt@number 0054               ?i1___ftmul 0078                _Interrupt 0045  
    __size_of_averageADC 003B                 ??___ftge 0076              __pdataBANK0 005D  
            __pdataBANK2 0120        __size_of___awtoft 0023        __size_of___ftpack 006E  
      __size_of___lbtoft 001C                ___latbits 0000            __pcstackBANK0 0020  
          __pcstackBANK1 00A0      __size_of_readSerial 003A               ?_Interrupt 0070  
              __pnvBANK0 005A                 ?___awdiv 0077                 ?___awmod 0070  
               ?___ftdiv 00B0                 ?___ftmul 00C9                 ?___fttol 002A  
               ?_readADC 00D9              ??i1___ftmul 0020        interrupt_function 0004  
            _readADC$521 00DC             ??_averageADC 00C3              ??_Interrupt 0038  
     __end_of_averageADC 06AF             ??_readSerial 00A0         __size_of___awdiv 005B  
       __size_of___awmod 004B         __size_of___ftdiv 00B6         __size_of___ftmul 00D1  
       __size_of___fttol 008E                 ___awtoft 0748                 ___ftpack 0497  
               ___lbtoft 076B         __size_of_readADC 0031       readSerial@valueADC 00A2  
               __ptext10 0284                 __ptext11 0505                 __ptext12 0409  
               __ptext13 0571                 __ptext14 0629                 __ptext15 05CE  
               _controle 005D       __end_of_readSerial 06E9            __size_of_main 002E  
          Interrupt@F619 0120       averageADC@readings 00C5               _INTCONbits 000B  
               intlevel1 0000       __CFG_FOSC$INTOSCIO 0000  
